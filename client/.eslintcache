[{"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\index.js":"1","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\reportWebVitals.js":"2","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\App.js":"3","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\context\\auth_context.js":"4","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\HomePage.js":"5","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\UnAuthenticatedApp.js":"6","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\DeveloperApp.js":"7","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\AuthenticatedApp.js":"8","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\hooks\\authentication_provider.js":"9","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\TestManagement.js":"10","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\TextManagement.js":"11","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\DeleteTextPage.js":"12","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\LoginPage.js":"13","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\DeveloperNavbar.js":"14","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\AddQuestion.js":"15","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\requests\\UserModelRestAPI.js":"16","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\DeleteQuestion.js":"17","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\TextDisplayModel.js":"18","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\requests\\TextModelRestAPI.js":"19","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\VisualizationDisplayModal.js":"20","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\repositories\\TextRepository.js":"21","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\LoginCard.js":"22","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\TextVisualization.js":"23","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\TextVisualizationFactory.js":"24","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\WithOutVisualization.js":"25","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\FontSizeVisualization.js":"26","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\GradualFontVisualization.js":"27","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\SummaryOnlyVisualization.js":"28","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\GradualHighlightVisualization.js":"29","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\HighlightVisualization.js":"30"},{"size":718,"mtime":1615209950327,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1615209950332,"results":"33","hashOfConfig":"32"},{"size":823,"mtime":1615226810279,"results":"34","hashOfConfig":"32"},{"size":1678,"mtime":1615226811974,"results":"35","hashOfConfig":"32"},{"size":586,"mtime":1615226811928,"results":"36","hashOfConfig":"32"},{"size":766,"mtime":1615226811951,"results":"37","hashOfConfig":"32"},{"size":1251,"mtime":1615922223130,"results":"38","hashOfConfig":"32"},{"size":809,"mtime":1615388337356,"results":"39","hashOfConfig":"32"},{"size":929,"mtime":1615226811976,"results":"40","hashOfConfig":"32"},{"size":2738,"mtime":1615388337360,"results":"41","hashOfConfig":"32"},{"size":3814,"mtime":1615922223132,"results":"42","hashOfConfig":"32"},{"size":5274,"mtime":1615980570009,"results":"43","hashOfConfig":"32"},{"size":1125,"mtime":1615226811930,"results":"44","hashOfConfig":"32"},{"size":1637,"mtime":1615922223126,"results":"45","hashOfConfig":"32"},{"size":11065,"mtime":1615989321166,"results":"46","hashOfConfig":"32"},{"size":480,"mtime":1615226811978,"results":"47","hashOfConfig":"32"},{"size":6620,"mtime":1615980809824,"results":"48","hashOfConfig":"32"},{"size":1589,"mtime":1615736062694,"results":"49","hashOfConfig":"32"},{"size":4711,"mtime":1615984931137,"results":"50","hashOfConfig":"32"},{"size":3707,"mtime":1615472945103,"results":"51","hashOfConfig":"32"},{"size":4864,"mtime":1615984594482,"results":"52","hashOfConfig":"32"},{"size":1626,"mtime":1615226810856,"results":"53","hashOfConfig":"32"},{"size":428,"mtime":1615226811335,"results":"54","hashOfConfig":"32"},{"size":1375,"mtime":1615226811894,"results":"55","hashOfConfig":"32"},{"size":236,"mtime":1615226811993,"results":"56","hashOfConfig":"32"},{"size":575,"mtime":1615226810282,"results":"57","hashOfConfig":"32"},{"size":302,"mtime":1615226810851,"results":"58","hashOfConfig":"32"},{"size":517,"mtime":1615226811334,"results":"59","hashOfConfig":"32"},{"size":311,"mtime":1615226811997,"results":"60","hashOfConfig":"32"},{"size":593,"mtime":1615226810854,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"rjozy9",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\index.js",[],["142","143"],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\reportWebVitals.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\App.js",["144","145","146"],"import React from 'react'\r\nimport logo from './logo.svg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { useAuth } from './model/context/auth_context'\r\nimport { HomePage } from './components/pages/HomePage';\r\nconst DeveloperApp = React.lazy(() => import('./components/pages/DeveloperApp'))\r\nconst AuthenticatedApp = React.lazy(() => import('./components/pages/AuthenticatedApp'))\r\nconst AuthenticatedManagerApp = React.lazy(() => import('./components/pages/AuthenticatedApp'))\r\nconst UnauthenticatedApp = React.lazy(() => import('./components/pages/UnAuthenticatedApp'))\r\n\r\nfunction App() {\r\n\r\n  const {user} = useAuth()\r\n  return (\r\n    <React.Suspense fallback={<HomePage />}>\r\n       {user ? <DeveloperApp /> : <UnauthenticatedApp />}\r\n    </React.Suspense>\r\n  )\r\n}\r\n\r\nexport default App;","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\context\\auth_context.js",["147"],"import React, { useEffect, useState } from 'react'\r\nimport  * as provider from \"../hooks/authentication_provider\"\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst AuthContext = React.createContext()\r\nAuthContext.displayName = 'AuthContext'\r\n\r\nexport function AuthProvider({children}){\r\n    \r\n    const history = useHistory()\r\n\r\n    useEffect(() =>{\r\n        provider.load_user_details().then(function (user){\r\n            setValue({\r\n                user: user,\r\n                login: login,\r\n                logout: logout\r\n            })\r\n        })\r\n    },[])\r\n\r\n    const login = (user_data) => {\r\n        provider.userLogin(user_data).then(function (user){\r\n            setValue({\r\n                user: user,\r\n                login: login,\r\n                logout: logout\r\n            })\r\n            history.push('/')\r\n        })\r\n        .catch(function(err){\r\n            setValue({\r\n                user: null,\r\n                login: login,\r\n                logout: logout\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    const logout = () => {\r\n        provider.userLogout()\r\n        setValue({\r\n            user: null,\r\n            login: login,\r\n            logout: logout\r\n        })\r\n    }\r\n\r\n    const [value, setValue] = useState({\r\n        user: null,\r\n        login: login,\r\n        logout: logout\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport function useAuth() {\r\n    const context = React.useContext(AuthContext)\r\n    if (context === undefined) {\r\n      throw new Error(`useAuth must be used within a AuthProvider`)\r\n    }\r\n    return context\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\HomePage.js",["148"],"import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport './HomePage.css'\r\n\r\n\r\nexport function HomePage(){\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row className=\"mt-5 justify-content-center align-items-center\">\r\n                    <h1 className=\"block\">Welcome</h1>\r\n                </Row>\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                    <h2>Visualization Summary Platform</h2>\r\n                </Row>\r\n            </Container>\r\n            \r\n        </>\r\n    )\r\n\r\n\r\n\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\UnAuthenticatedApp.js",["149"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { HomePage } from './HomePage';\r\nimport { LoginPage } from './LoginPage';\r\nimport { useAuth } from '../../model/context/auth_context';\r\nimport DeveloperNavbar from \"../DeveloperNavbar\";\r\n\r\nfunction UnAuthenticatedApp() {\r\n\r\n    const {login} = useAuth()\r\n    return (\r\n        <>\r\n        <Router>\r\n            <DeveloperNavbar/>\r\n            <Switch>\r\n                <Route path='/' exact component={HomePage} />\r\n                <Route path='/login' component={LoginPage} />\r\n            </Switch>\r\n        </Router>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UnAuthenticatedApp;\r\n","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\DeveloperApp.js",["150","151"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { HomePage } from './HomePage';\r\nimport TestManagement from './TestManagement';\r\nimport { useAuth } from '../../model/context/auth_context';\r\nimport DeveloperNavbar from '../DeveloperNavbar';\r\nimport TextManagement from \"./TextManagement\";\r\nimport DeleteText from \"./DeleteTextPage\"\r\nimport AddQuestion from \"./AddQuestion\";\r\nimport DeleteQuestion from \"./DeleteQuestion\";\r\n\r\nfunction AuthenticatedApp() {\r\n\r\n    return (\r\n        <>\r\n            <DeveloperNavbar/>\r\n            <Switch>\r\n                <Route path='/' exact component={HomePage} />\r\n                <Route path='/create-test' component={TestManagement} />\r\n                <Route path='/add-text' component={TextManagement} />\r\n                <Route path='/delete-text' component={DeleteText} />\r\n                {<Route path='/add-question' component={AddQuestion} />}\r\n                {<Route path='/delete-question' component={DeleteQuestion} />}\r\n                {/*<Route path='/texts/:id' component={} />*/}\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthenticatedApp;\r\n","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\AuthenticatedApp.js",["152","153","154","155"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { HomePage } from './HomePage';\r\nimport TestManagement from './TestManagement.js';\r\nimport TextManagement from './TextManagement.js';\r\n\r\nimport { useAuth } from '../../model/context/auth_context';\r\nimport DeveloperNavbar from \"../DeveloperNavbar\";\r\n\r\nfunction AuthenticatedApp() {\r\n\r\n    const {user, logout} = useAuth()\r\n    return (\r\n        <>\r\n            <DeveloperNavbar/>\r\n            <Switch>\r\n                <Route path='/' exact component={HomePage} />\r\n                <Route path='/create-test' component={TestManagement} />\r\n\r\n\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthenticatedApp;\r\n","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\hooks\\authentication_provider.js",["156","157"],"import React, { useState } from 'react'\r\nimport { login, get_user_details } from '../requests/UserModelRestAPI'\r\nimport Cookies from \"js-cookie\"\r\n\r\n\r\nexport function userLogin (user_data) {\r\n    let response = login(user_data)\r\n    return response.then(function (response){\r\n        Cookies.set(\"x-auth-token\", response.data.token,{ expires: 1 });\r\n        return Promise.resolve(response.data.user)\r\n    })\r\n    .catch(function(err){\r\n        return Promise.reject(err);\r\n    })\r\n}\r\n\r\n\r\nexport function userLogout () {\r\n    Cookies.remove(\"x-auth-token\")\r\n}\r\n\r\nexport function load_user_details () {\r\n    let response = get_user_details()\r\n    return response.then(function (response){\r\n        return Promise.resolve(response.data)\r\n    })\r\n    .catch(function(err){\r\n        return Promise.reject(err);\r\n    })\r\n}\r\n\r\nexport function getToken (){\r\n    return Cookies.get(\"x-auth-token\") ? Cookies.get(\"x-auth-token\") : null;\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\TestManagement.js",["158","159","160","161","162","163"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Container, Row } from 'react-bootstrap';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport { useAuth } from '../../model/context/auth_context';\r\nimport * as textRepository from \"../../repositories/TextRepository\";\r\nimport { VisualizationDisplayModal } from '../VisualizationDisplayModal';\r\n\r\n\r\n\r\n\r\nexport default function TestManagement() {\r\n    \r\n    const {user} = useAuth()\r\n\r\n    const setModal = useParams()\r\n\r\n\r\n    const { id } = useParams()\r\n    const textById = textRepository.useGetTextById(id)\r\n    const [modalShow,setModalShow] = useState([false,false,false,false,false,false,false,false,false,false])\r\n\r\n    const size = 10\r\n    const [dropdown, setDropdown] = useState([0,0,0,0,0,0,0,0,0,0]);\r\n\r\n\r\n    const texts = textRepository.useGetAllText()\r\n\r\n\r\n    return (\r\n    <>\r\n        <Container>\r\n        <h2 className=\"mb-3 text-left\">Test</h2>\r\n            <Row className=\"justify-content-center\">\r\n                <Col></Col>\r\n                <Col xs=\"9\">\r\n                    <div>\r\n                    {\r\n                        dropdown.map((value, index) => {\r\n                            return (\r\n                                <>\r\n                                <select value={dropdown[index]} onChange={(e)=>{\r\n                                    let arr=[...dropdown]\r\n                                    arr[index] = parseInt(e.target.value)\r\n                                    setDropdown(arr)\r\n                                }}>\r\n                                {texts && texts.data ? texts.data.map(text => (\r\n                                    <option value={text.id}>{text.name}</option>\r\n                                    )) : null}\r\n                                </select>\r\n                                    {'    '}<Button onClick={(e)=>{\r\n                                    let arr=[...modalShow]\r\n                                    arr[index] = true\r\n                                    setModalShow(arr)\r\n                                }}>Choose Visualization</Button><br/><br/>\r\n                                <VisualizationDisplayModal show={modalShow[index]} onHide={() => {\r\n                                    let arr=[...modalShow]\r\n                                    arr[index] = false\r\n                                    setModalShow(arr)\r\n                                }} text={dropdown[index]}></VisualizationDisplayModal>\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                    </div>\r\n\r\n\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n            </Container>\r\n    </>);\r\n}\r\n","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\TextManagement.js",["164","165","166","167","168","169"],"import React, { useState } from 'react';\r\nimport {Button, Col, Container, Modal, Row} from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport {deleteText, uploadText} from \"../../model/requests/TextModelRestAPI\";\r\nimport {TextDisplayModal} from \"../TextDisplayModel\";\r\n\r\n\r\nexport default function TextManagement() {\r\n\r\n    const[flag, setFlag]= useState(false)\r\n    const {register, handleSubmit} = useForm();\r\n    const[content, setContent]= useState(\"\");\r\n    const[name, setName]= useState(\"\");\r\n    const [modalShow,setModalShow] = useState([false])\r\n    const [show, setShow] = useState(false);\r\n    const reload=()=>window.location.reload();\r\n    const handleClose = () => {\r\n        setShow(false)\r\n        setModalShow(false)\r\n    };\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const onChange = (e) => {\r\n        const file = e.target.files[0];\r\n        file.text().then( filetext => {\r\n            setContent(filetext.replace(/(\\r\\n|\\n|\\r)/gm, \" \"));\r\n        }).catch( (e) => {\r\n            console.log(\"\")\r\n        })\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h2 className=\"mb-3 text-left\">Upload Text</h2> <br/><br/>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col></Col>\r\n                    <Col xs=\"9\">\r\n                        <div>\r\n                            <form onSubmit={handleSubmit(onsubmit)}>\r\n                              <h4 className=\"mb-3 text-left\">Text Name:</h4>\r\n                               <p><input type='text' placeholder='enter text name' name= 'name' onChange={(e)=>{\r\n\r\n                                   setName(e.target.value);\r\n                               }} /></p><br/><br/>\r\n\r\n                                <h4 className=\"mb-3 text-left\">Upload Text:</h4>\r\n                               <input type=\"file\" required name=\"file\" onChange={onChange}/> <br/><br/>\r\n\r\n                                <div>\r\n                                    <Button onClick={(e)=>{\r\n                                        setFlag(!flag)\r\n                                    }}> {flag?\"Hide Text\" : \"Show Text\"}</Button> <br/><br/>\r\n                                </div>\r\n                                <div>\r\n                                    {flag && content}\r\n                                </div>\r\n\r\n\r\n\r\n                                <Button variant=\"primary\" onClick={(e)=>{\r\n\r\n                                    uploadText(name, content)\r\n                                    handleShow()\r\n                                }}>Save</Button>\r\n\r\n                                <Modal\r\n                                    show={show}\r\n                                    onHide={handleClose}\r\n                                    backdrop=\"static\"\r\n                                    keyboard={false}\r\n                                >\r\n                                    <Modal.Header closeButton>\r\n                                        <Modal.Title>Modal title</Modal.Title>\r\n                                    </Modal.Header>\r\n                                    <Modal.Body>\r\n                                        text added!\r\n                                    </Modal.Body>\r\n                                    <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                    </Modal.Footer>\r\n                                </Modal>\r\n\r\n\r\n\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n            </Container>\r\n        </>);\r\n}\r\n\r\n\r\n","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\DeleteTextPage.js",["170","171","172","173"],"import React, { useState } from 'react';\r\nimport {Button, Col, Container, Modal, Row} from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport {deleteText} from \"../../model/requests/TextModelRestAPI\";\r\nimport * as textRepository from \"../../repositories/TextRepository\";\r\nimport {TextDisplayModal} from \"../TextDisplayModel\";\r\n\r\n\r\nexport default function DeleteText() {\r\n\r\n    const {register, handleSubmit} = useForm();\r\n    const[content, setContent]= useState(\"\");\r\n\r\n    const [dropdown, setDropdown] = useState([0]);\r\n    const texts = textRepository.useGetAllText()\r\n    const [modalShow,setModalShow] = useState([false])\r\n    const [arr,setArr] = useState([0])\r\n\r\n    const [show, setShow] = useState(false);\r\n    const reload=()=>window.location.reload();\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n        reload();\r\n    };\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h2 className=\"mb-3 text-left\">Delete Text</h2> <br/><br/>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col></Col>\r\n                    <Col xs=\"9\">\r\n                        <div>\r\n                            <form onSubmit={handleSubmit(onsubmit)}>\r\n                                <h4 className=\"mb-3 text-left\">Choose Text Name:</h4> <br/><br/>\r\n\r\n                                <div>\r\n                                    {\r\n                                        dropdown.map((value, index) => {\r\n                                            return (\r\n                                                <>\r\n                                                    <select value={dropdown[index]} onChange={(e)=>{\r\n                                                        setArr([...dropdown])\r\n                                                        arr[index] = parseInt(e.target.value)\r\n                                                        setDropdown(arr)\r\n\r\n\r\n\r\n                                                    }}>\r\n                                                        {texts && texts.data ? texts.data.map(text => (\r\n                                                            <option value={text.id}>{text.name}</option>\r\n                                                        )) : null}\r\n                                                    </select> {'    '}<Button onClick={(e)=>{\r\n                                                    setArr([...dropdown])\r\n                                                    arr[index] = true\r\n                                                    setModalShow(arr)\r\n                                                }}>Show Text</Button><br/><br/>\r\n\r\n                                                    <TextDisplayModal show={modalShow[index]} onHide={() => {\r\n                                                        setArr([...dropdown])\r\n                                                        arr[index] = false\r\n                                                        setModalShow(arr)\r\n                                                    }} text={dropdown[index]}></TextDisplayModal>\r\n\r\n                                                    <Button variant=\"primary\" onClick={(e)=>{\r\n\r\n                                                        deleteText(arr)\r\n                                                        handleShow()\r\n                                                    }}>Delete</Button>\r\n\r\n                                                    <Modal\r\n                                                        show={show}\r\n                                                        onHide={handleClose}\r\n                                                        backdrop=\"static\"\r\n                                                        keyboard={false}\r\n                                                    >\r\n                                                        <Modal.Header closeButton>\r\n                                                            <Modal.Title>Modal title</Modal.Title>\r\n                                                        </Modal.Header>\r\n                                                        <Modal.Body>\r\n                                                            text deleted!\r\n                                                        </Modal.Body>\r\n                                                        <Modal.Footer>\r\n                                                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                                Close\r\n                                                            </Button>\r\n                                                        </Modal.Footer>\r\n                                                    </Modal>\r\n\r\n                                                </>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n            </Container>\r\n        </>);\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\LoginPage.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\DeveloperNavbar.js",["174","175","176","177","178","179"],"import React, { useState } from 'react';\r\nimport { Button, Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth } from '../model/context/auth_context'\r\n\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\n\r\n\r\n\r\nexport default function DeveloperNavbar (){\r\n    const {user, logout} = useAuth()\r\n\r\n    const [click, setClick] = useState(false);\r\n    const [dropdown, setDropdown] = useState(false);\r\n\r\nreturn (\r\n    <>\r\n    <Navbar bg=\"light\" variant=\"light\">\r\n        <Navbar.Brand href=\"/\" className=\"font-weight-bold\">Visual Summary</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n            {user && <Nav.Link as={Link} to=\"/create-test\">Tests</Nav.Link>}\r\n\r\n            {user &&\r\n            <ReactBootStrap.NavDropdown title=\"Texts\" id=\"collasible-nav-dropdown\">\r\n                <ReactBootStrap.NavDropdown.Item href=\"/add-text\">Upload Text</ReactBootStrap.NavDropdown.Item>\r\n                <ReactBootStrap.NavDropdown.Item href=\"/delete-text\">Delete Text</ReactBootStrap.NavDropdown.Item>\r\n                <ReactBootStrap.NavDropdown.Item href=\"/add-question\">Add Question</ReactBootStrap.NavDropdown.Item>\r\n                <ReactBootStrap.NavDropdown.Item href=\"/delete-question\">Delete Question</ReactBootStrap.NavDropdown.Item>\r\n\r\n            </ReactBootStrap.NavDropdown>\r\n            }\r\n        </Nav>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <Nav>\r\n             {user ? <Nav.Link as={Link} to=\"/\" onClick={logout}>Logout</Nav.Link> : <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>}\r\n        </Nav>\r\n    </Navbar>\r\n    </>\r\n)}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\AddQuestion.js",["180","181","182","183","184","185","186","187","188","189","190","191","192","193"],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\requests\\UserModelRestAPI.js",["194","195","196"],"import React ,{useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { getToken } from '../hooks/authentication_provider'\r\n\r\nexport function login(props){\r\n    const url = 'http://127.0.0.1:5000/auth/login'\r\n    const body = props\r\n    return axios.post(url,body)\r\n}\r\n\r\n\r\nexport function get_user_details(){\r\n    const url = 'http://127.0.0.1:5000/private/user/get'\r\n    const headers = {headers: {\"x-auth-token\": getToken()}}\r\n    return axios.get(url, headers)\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\DeleteQuestion.js",["197","198","199","200","201","202","203","204"],"import React, { useState } from 'react';\r\nimport {Button, Col, Container, Modal, Row} from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport {deleteQuestion, deleteText} from \"../../model/requests/TextModelRestAPI\";\r\nimport * as textRepository from \"../../repositories/TextRepository\";\r\nimport {TextDisplayModal} from \"../TextDisplayModel\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\nexport default function DeleteQuestion() {\r\n\r\n    let questionsById\r\n\r\n    const {register, handleSubmit} = useForm();\r\n    const[content, setContent]= useState(\"\");\r\n    const [text_id,setText_id] = useState(1)\r\n\r\n    const [dropdown, setDropdown] = useState([0]);\r\n    const texts = textRepository.useGetAllText()\r\n    const text_questions = textRepository.useGetAllQuestionsById(text_id)\r\n    const [modalShow,setModalShow] = useState([false])\r\n    const [arr,setArr] = useState([0])\r\n    const [show, setShow] = useState(false);\r\n\r\n\r\n    const reload=()=>window.location.reload();\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n        reload();\r\n    };\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h2 className=\"mb-3 text-left\">Delete Question</h2> <br/><br/>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col></Col>\r\n                    <Col xs=\"9\">\r\n                        <div>\r\n                            <form onSubmit={handleSubmit(onsubmit)}>\r\n                                <h5 className=\"mb-3 text-left\">Choose Text Name:</h5>\r\n\r\n                                <div>\r\n                                    {\r\n                                        dropdown.map((value, index) => {\r\n                                            return (\r\n                                                <>\r\n                                                    <select value={dropdown[index]} onChange={(e)=>{\r\n                                                        setArr([...dropdown])\r\n                                                        arr[index] = parseInt(e.target.value)\r\n                                                        setDropdown(arr)\r\n                                                        setText_id(arr[index])\r\n                                                    }}>\r\n                                                        {texts && texts.data ? texts.data.map(text => (\r\n                                                            <option value={text.id}>{text.name}</option>\r\n                                                        )) : null}\r\n                                                    </select> {'    '}\r\n                                                    <Button onClick={(e)=>{\r\n                                                    setArr([...dropdown])\r\n                                                    arr[index] = true\r\n                                                    setText_id(dropdown[index])\r\n                                                    setModalShow(arr)}}>\r\n                                                        Show Text\r\n                                                    </Button><br/><br/>\r\n\r\n                                                    <TextDisplayModal show={modalShow[index]} onHide={() => {\r\n                                                        setArr([...dropdown])\r\n                                                        arr[index] = false\r\n                                                        setModalShow(arr)\r\n                                                    }} text={dropdown[index]}></TextDisplayModal>\r\n                                                    <br></br>\r\n\r\n                                                   <select onChange={(e)=>{\r\n                                                        setArr([...dropdown])\r\n                                                        arr[index] = parseInt(e.target.value)\r\n                                                        setDropdown(arr)\r\n\r\n                                                    }}>\r\n                                                        {text_id && text_questions && text_questions.data ? text_questions.data.map(question => (\r\n                                                            <option value={question.question_id}>{question.question_content}</option>\r\n                                                        )) : null}\r\n                                                    </select>{'    '}\r\n\r\n                                                    <Button variant=\"primary\" onClick={(e)=>{\r\n                                                        /*deleteQuestion(Que_id)*/\r\n                                                        handleShow()\r\n                                                    }}>Delete</Button>\r\n\r\n                                                    <Modal\r\n                                                        show={show}\r\n                                                        onHide={handleClose}\r\n                                                        backdrop=\"static\"\r\n                                                        keyboard={false}\r\n                                                    >\r\n                                                        <Modal.Header closeButton>\r\n                                                            <Modal.Title>Message</Modal.Title>\r\n                                                        </Modal.Header>\r\n                                                        <Modal.Body>\r\n                                                            Question Deleted!\r\n                                                        </Modal.Body>\r\n                                                        <Modal.Footer>\r\n                                                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                                Close\r\n                                                            </Button>\r\n                                                        </Modal.Footer>\r\n                                                    </Modal>\r\n                                                </>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n            </Container>\r\n        </>);\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\TextDisplayModel.js",["205","206","207","208","209","210"],"import React, {useState} from 'react'\r\nimport {Button, Container, Modal, Row, Col} from 'react-bootstrap';\r\nimport {TextVisualization} from \"./TextVisualization\";\r\nimport * as textRepository from \"../repositories/TextRepository\";\r\nimport \"./Modal.css\"\r\n\r\n\r\n//style={{position: \"absolute\" , left: \"10px\"}}\r\nexport function TextDisplayModal(props) {\r\n    const id = props.text\r\n\r\n    const text1 = textRepository.useGetTextWeights(id)\r\n    const [type, setType] = useState(\"Without Visualization\");\r\n\r\n    const [propertyName, setPropertyName] = useState(\"none\");\r\n    const [propertyValue, setPropertyValue] = useState(\"none\");\r\n    const [propertyType, setPropertyType] = useState(\"none\");\r\n\r\n    let onButtonClick = function(event){\r\n        textRepository.save(type,id,propertyName,propertyValue,propertyType)\r\n        props.onHide()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            aria-labelledby=\"example-custom-modal-styling-title\"\r\n            size=\"xl\"\r\n            dialogClassName=\"my-modal\"\r\n\r\n        >\r\n            <Modal.Header closeButton>\r\n\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Container>\r\n                    <Col >\r\n                        {text1 && text1.data ? <TextVisualization sentences={text1.data.sentences} type={type} /*type={type}*/ name={text1.data.name}/> : null}\r\n                    </Col>\r\n                </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\requests\\TextModelRestAPI.js",["211","212"],"import React ,{useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { getToken } from '../hooks/authentication_provider'\r\n\r\nfunction useAxiosGet(url, headers){    \r\n    const [request, setRequest] = useState({\r\n        loading: false,\r\n        data: [],\r\n        error: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        setRequest({\r\n            loading: true,\r\n            data: [],\r\n            error: false\r\n        })\r\n        axios.get(url, headers).then( response => {\r\n            setRequest({\r\n                loading: false,\r\n                data: response.data,\r\n                error: false\r\n            })\r\n        }).catch( () => {\r\n            setRequest({\r\n                loading: false,\r\n                data: [],\r\n                error: true\r\n            })\r\n        })\r\n    },[url])\r\n\r\n    return request\r\n}\r\n\r\nexport function useGetAllText(){\r\n    const url = 'http://127.0.0.1:5000/texts'\r\n    const headers = {headers: {\"x-auth-token\": getToken()}}\r\n    return useAxiosGet(url, headers)\r\n}\r\n\r\n\r\nexport function useGetQuestionId(){\r\n    const url = 'http://127.0.0.1:5000/questionId'\r\n    const headers = {headers: {\"x-auth-token\": getToken()}}\r\n    return useAxiosGet(url, headers)\r\n}\r\n\r\n\r\n export function saveVisualizationForText(type,textID,propertyName,propertyValue,propertyType){\r\n     const url = 'http://127.0.0.1:5000/saveVisu'\r\n     const body = \"{ \\\"testName\\\": \\\"test\\\", \\\"textID\\\":\" + textID + \", \\\"visualizationType\\\": \\\"\" + type + \"\\\", \\\"propName\\\": \\\"\" + propertyName + \"\\\", \\\"propVal\\\": \\\"\" + propertyValue + \"\\\" , \\\"propType\\\":\\\"\" + propertyType + \"\\\" }\"\r\n     const headers = {headers : {\"x-auth-token\": getToken()}}\r\n     return axios.post(url,body,headers)\r\n }\r\n\r\nexport function useGetTextById(id){\r\n    const url = `http://127.0.0.1:5000/texts/${id}`\r\n    const headers = {headers: {\"x-auth-token\": getToken()}}\r\n    return useAxiosGet(url, headers, false)\r\n}\r\n\r\nexport function useGetAllQuestionsById(id){\r\n    console.log(\"aaaaav \"+id)\r\n    const url = `http://127.0.0.1:5000/questions/${id}`\r\n    const headers = {headers: {\"x-auth-token\": getToken()}}\r\n    return useAxiosGet(url, headers)\r\n}\r\n\r\nexport function useGetTextWeights(id){\r\n    const url = `http://127.0.0.1:5000/texts/${id}/weights`\r\n    const headers = {headers: {\"x-auth-token\": getToken()}}\r\n    return useAxiosGet(url, headers, false)\r\n}\r\n\r\nexport function createText(props){\r\n    const url = 'http://127.0.0.1:5000/texts'\r\n    const body = props\r\n    const headers = {headers : {\"x-auth-token\": getToken()}}\r\n    return axios.post(url,body,headers)\r\n}\r\n\r\nexport function uploadText(name, content){\r\n    const url = 'http://127.0.0.1:5000/uploadText'\r\n    const body = \"{  \\\"name\\\":\\\"\" + name + \"\\\", \\\"content\\\":\\\"\" + content + \"\\\" }\"\r\n    const headers = {headers : {\"x-auth-token\": getToken()}}\r\n    return axios.post(url,body,headers)\r\n}\r\n\r\nexport function deleteText(id){\r\n    const url = 'http://127.0.0.1:5000/deleteText'\r\n    const body = \"{ \\\"id\\\":\\\"\" + id + \"\\\" }\"\r\n    console.log(body)\r\n    const headers = {headers : {\"x-auth-token\": getToken()}}\r\n    return axios.post(url,body,headers)\r\n}\r\n\r\nexport function addQuestion(text_id, question_content){\r\n    const url = 'http://127.0.0.1:5000/addQuestion'\r\n    const body = \"{  \\\"text_id\\\":\\\"\" + text_id + \"\\\", \\\"question_content\\\":\\\"\" + question_content + \"\\\" }\"\r\n    const headers = {headers : {\"x-auth-token\": getToken()}}\r\n    console.log(body)\r\n    return axios.post(url,body,headers)\r\n}\r\n\r\nexport function addAnswers(option_id ,question_id, text_id, is_correct, answer_content){\r\n    const url = 'http://127.0.0.1:5000/addAnswers'\r\n    const body = \"{  \\\"option_id\\\":\\\"\" + option_id + \"\\\", \\\"question_id\\\":\\\"\" + question_id + \"\\\", \\\"text_id\\\":\\\"\" + text_id + \"\\\" ,  \\\"is_correct\\\":\\\"\" + is_correct + \"\\\", \\\"answer_content\\\":\\\"\" + answer_content + \"\\\"  }\"\r\n    console.log(body)\r\n    const headers = {headers : {\"x-auth-token\": getToken()}}\r\n    return axios.post(url,body,headers)\r\n}\r\n\r\nexport function deleteQuestion(id){\r\n    const url = 'http://127.0.0.1:5000/deleteQuestion'\r\n    const body = \"{ \\\"id\\\":\\\"\" + id + \"\\\" }\"\r\n    console.log(body)\r\n    const headers = {headers : {\"x-auth-token\": getToken()}}\r\n    return axios.post(url,body,headers)\r\n}\r\n// export function editText(props){\r\n//     const url = 'http://127.0.0.1:5000/texts'\r\n//     const body = props\r\n//     const headers = {headers : {\"x-auth-token\": getToken()}}\r\n//     return axios.put(url,body,headers)\r\n// }\r\n\r\n// export function deleteText(props){\r\n//     const url = 'http://127.0.0.1:5000/texts'\r\n//     const body = props\r\n//     const headers = {headers : {\"x-auth-token\": getToken()}}\r\n//     return axios.delete(url,body,headers)\r\n// }","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\VisualizationDisplayModal.js",["213"],"import React, {useState} from 'react'\r\nimport {Button, Container, Modal, Row, Col} from 'react-bootstrap';\r\nimport {TextVisualization} from \"./TextVisualization\";\r\nimport * as textRepository from \"../repositories/TextRepository\";\r\nimport \"./Modal.css\"\r\n\r\n\r\n//style={{position: \"absolute\" , left: \"10px\"}}\r\nexport function VisualizationDisplayModal(props) {\r\n  const id = props.text\r\n\r\n  const text1 = textRepository.useGetTextWeights(id)\r\n  const [type, setType] = useState(\"Without Visualization\");\r\n\r\n  const [propertyName, setPropertyName] = useState(\"none\");\r\n  const [propertyValue, setPropertyValue] = useState(\"none\");\r\n  const [propertyType, setPropertyType] = useState(\"none\");\r\n\r\n  let onButtonClick = function(event){\r\n    textRepository.save(type,id,propertyName,propertyValue,propertyType)\r\n    props.onHide()\r\n  }\r\n\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n        size=\"xl\"\r\n        dialogClassName=\"my-modal\"\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">Visualization\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <Col >\r\n              <h3>Visualization : {type}</h3>\r\n\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Without Visualization\"} value=\"Without Visualization\" onChange={(e)=>{setType(e.target.value); setPropertyName(\"none\");setPropertyValue(\"none\"); setPropertyType(\"none\")}}/>\r\n                <label>Without Visualization</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Highlight\" } value=\"Highlight\"  onChange={(e)=>{setType(e.target.value); setPropertyName(\"color\"); setPropertyValue(\"yellow\"); setPropertyType(\"str\")}}/>\r\n                <label>Highlight</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Gradual Highlight\"} value=\"Gradual Highlight\" onChange={(e)=>{setType(e.target.value);setPropertyName(\"color\");setPropertyValue(\"yellow\"); setPropertyType(\"str\")}}/>\r\n                <label>Gradual Highlight</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Increased Font\"} value=\"Increased Font\" onChange={(e)=>{setType(e.target.value);setPropertyName(\"font\"); setPropertyValue(\"18\"); setPropertyType(\"int\") }}/>\r\n                <label>Increased Font</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Gradual Font\"} value=\"Gradual Font\" onChange={(e)=>{setType(e.target.value); setPropertyName(\"font\"); setPropertyValue(\"18\"); setPropertyType(\"int\") }}/>\r\n                <label>Gradual Font</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Summary Only\"} value=\"Summary Only\" onChange={(e)=>{setType(e.target.value); setPropertyName(\"none\") ;setPropertyValue(\"none\"); setPropertyType(\"none\") }}/>\r\n                <label>Summary Only</label>\r\n              </div>\r\n              </Col >\r\n              <Col >\r\n              {text1 && text1.data ? <TextVisualization sentences={text1.data.sentences} type={type} /*type={type}*/ name={text1.data.name}/> : null}\r\n              </Col>\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button  onClick={(e)=>{onButtonClick() }} href={''}>Save</Button>\r\n          <Button onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\repositories\\TextRepository.js",["214","215","216","217","218","219"],"import React,{ useState , useEffect } from 'react';\r\nimport * as textModelRestAPI  from '../model/requests/TextModelRestAPI';\r\n\r\n\r\nexport function save(type,textID,propertyName,propertyValue,propertyType){\r\n    textModelRestAPI.saveVisualizationForText(type,textID,propertyName,propertyValue,propertyType)\r\n}\r\n\r\nexport function useGetAllText(){\r\n\r\n    const [text, setText] = useState({\r\n        loading: false,\r\n        data: [],\r\n        error: false\r\n    })\r\n\r\n    const restText = textModelRestAPI.useGetAllText()\r\n\r\n    useEffect( () => {\r\n        setText({\r\n            loading: true,\r\n            data: [],\r\n            error: false\r\n        })\r\n        if(!restText.error && !restText.loading && restText.data != null){\r\n            setText({\r\n                loading: false,\r\n                data: restText.data,\r\n                error: false\r\n            })\r\n        }\r\n        else {\r\n            setText({\r\n                loading: false,\r\n                data: [],\r\n                error: true\r\n            })\r\n        }\r\n    },[restText.data])\r\n\r\n    return text\r\n}\r\n\r\n\r\nexport function useGetAllQuestionsById(id){\r\n\r\n    const [question, setQuestion] = useState({\r\n        loading: false,\r\n        data: [],\r\n        error: false\r\n    })\r\n\r\n    const restQuestion = textModelRestAPI.useGetAllQuestionsById(id)\r\n\r\n    useEffect( () => {\r\n        setQuestion({\r\n            loading: true,\r\n            data: [],\r\n            error: false\r\n        })\r\n        if(!restQuestion.error && !restQuestion.loading && restQuestion.data != null){\r\n            setQuestion({\r\n                loading: false,\r\n                data: restQuestion.data,\r\n                error: false\r\n            })\r\n        }\r\n        else {\r\n            setQuestion({\r\n                loading: false,\r\n                data: [],\r\n                error: true\r\n            })\r\n        }\r\n    },[restQuestion.data])\r\n\r\n    return question\r\n}\r\n\r\n\r\nexport function useGetTextById(id){\r\n\r\n    const [text, setText] = useState({\r\n        loading: false,\r\n        data: [],\r\n        error: false\r\n    })\r\n\r\n    const restText = textModelRestAPI.useGetTextById()\r\n    // const fileMedia = textDummieModel.useGetTextById(id)\r\n\r\n    useEffect( () => {\r\n        setText({\r\n            loading: true,\r\n            data: [],\r\n            error: false\r\n        })\r\n        if(!restText.error && !restText.loading && restText.data != null){\r\n            setText({\r\n                loading: false,\r\n                data: restText.data,\r\n                error: false\r\n            })\r\n        }\r\n        // else if (!fileMedia.error && !fileMedia.loading && fileMedia.data != null){\r\n        //     setText({\r\n        //         loading: false,\r\n        //         data: fileMedia.data,\r\n        //         error: false\r\n        //     })\r\n        // }\r\n        else {\r\n            setText({\r\n                loading: false,\r\n                data: [],\r\n                error: true\r\n            })\r\n        }\r\n    },[/*fileMedia.data,*/restText.data])\r\n\r\n    return text\r\n}\r\n\r\nexport function useGetTextWeights(id){\r\n\r\n    const [text, setText] = useState({\r\n        loading: false,\r\n        data: null,\r\n        error: false\r\n    })\r\n\r\n    const restMedia = textModelRestAPI.useGetTextWeights(id)\r\n\r\n    useEffect( () => {\r\n        setText({\r\n            loading: true,\r\n            data: null,\r\n            error: false\r\n        })\r\n        if(!restMedia.error && !restMedia.loading && restMedia.data != null){\r\n            setText({\r\n                loading: false,\r\n                data: restMedia.data.length > 0 ? restMedia.data[0] : null,\r\n                error: false\r\n            })\r\n        }\r\n        else {\r\n            setText({\r\n                loading: false,\r\n                data: null,\r\n                error: true\r\n            })\r\n        }\r\n    },[restMedia.data])\r\n\r\n    return text\r\n}\r\n\r\n\r\nexport function useGetQuestionId(){\r\n\r\n    const [questionId, setQuestionId] = useState({\r\n        loading: false,\r\n        data: [],\r\n        error: false\r\n    })\r\n\r\n    const restQuestionId = textModelRestAPI.useGetQuestionId()\r\n\r\n    useEffect( () => {\r\n        setQuestionId({\r\n            loading: true,\r\n            data: [],\r\n            error: false\r\n        })\r\n        if(!restQuestionId.error && !restQuestionId.loading && restQuestionId.data != null){\r\n            setQuestionId({\r\n                loading: false,\r\n                data: restQuestionId.data,\r\n                error: false\r\n            })\r\n        }\r\n        else {\r\n            setQuestionId({\r\n                loading: false,\r\n                data: [],\r\n                error: true\r\n            })\r\n        }\r\n    },[restQuestionId.data])\r\n\r\n    return questionId\r\n}\r\n\r\n// export function createText(text){\r\n//     return create(text)\r\n// }\r\n// export function editMedia(text){\r\n//     return edit(text)\r\n// }","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\LoginCard.js",["220"],"import React from 'react'\r\nimport { Button, Card, Col, Form, FormControl, InputGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport function LoginCard(props){\r\n\r\n    \r\n    return (\r\n        <Card style={{ width: '18rem' }}>\r\n        <Card.Body>\r\n            <Card.Title className=\"text-center\">Login</Card.Title>\r\n            <Form>\r\n                <Form.Row>\r\n                    <Col xs=\"auto\">\r\n                        <InputGroup className=\"mb-2\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>@</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl name=\"username\" onChange={props.handleInputChange} id=\"inlineFormInputGroup\" placeholder=\"Username\" />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Col xs=\"auto\">\r\n                        <InputGroup className=\"mb-2\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>@</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl name=\"password\" onChange={props.handleInputChange} type=\"password\" id=\"inlineFormInputGroup\" placeholder=\"Password\" />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n            <Button className=\"mb-2\" onClick={props.handleLogin} variant=\"primary\" block>Login</Button>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n    \r\n\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\TextVisualization.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\TextVisualizationFactory.js",["221","222","223","224","225","226"],"import React from 'react'\r\nimport { GradualHighlightVisualization } from './pages/GradualHighlightVisualization'\r\nimport { WithOutVisualization } from './pages/WithOutVisualization'\r\nimport {GradualFontVisualization} from \"./GradualFontVisualization\";\r\nimport {SummaryOnlyVisualization} from \"./SummaryOnlyVisualization\";\r\nimport {HighlightVisualization} from \"./HighlightVisualization\";\r\nimport {FontSizeVisualization} from \"./FontSizeVisualization\";\r\n\r\n\r\n\r\nexport function TextVisualizationFactory(props){\r\n\r\n   \r\n    const type = props.type\r\n\r\n    if(type == \"Without Visualization\"){\r\n        return <WithOutVisualization sentences={props.sentences}/>\r\n    }\r\n\r\n    else if (type == \"Gradual Highlight\"){\r\n        return <GradualHighlightVisualization sentences={props.sentences}/>\r\n    }\r\n    else if (type == \"Highlight\"){\r\n        return <HighlightVisualization sentences={props.sentences}/>\r\n    }\r\n    else if (type == \"Increased Font\"){\r\n        return <FontSizeVisualization sentences={props.sentences}/>\r\n    }\r\n    else if (type == \"Gradual Font\"){\r\n        return <GradualFontVisualization sentences={props.sentences}/>\r\n    }\r\n    else if (type == \"Summary Only\"){\r\n        return <SummaryOnlyVisualization sentences={props.sentences}/>\r\n    }\r\n    else{\r\n        return <WithOutVisualization sentences={props.sentences}/>\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\WithOutVisualization.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\FontSizeVisualization.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\GradualFontVisualization.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\SummaryOnlyVisualization.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\GradualHighlightVisualization.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\HighlightVisualization.js",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":12},{"ruleId":"231","severity":1,"message":"235","line":8,"column":7,"nodeType":"233","messageId":"234","endLine":8,"endColumn":23},{"ruleId":"231","severity":1,"message":"236","line":9,"column":7,"nodeType":"233","messageId":"234","endLine":9,"endColumn":30},{"ruleId":"237","severity":1,"message":"238","line":21,"column":7,"nodeType":"239","endLine":21,"endColumn":9,"suggestions":"240"},{"ruleId":"231","severity":1,"message":"241","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":13},{"ruleId":"231","severity":1,"message":"242","line":12,"column":12,"nodeType":"233","messageId":"234","endLine":12,"endColumn":17},{"ruleId":"231","severity":1,"message":"243","line":4,"column":27,"nodeType":"233","messageId":"234","endLine":4,"endColumn":33},{"ruleId":"231","severity":1,"message":"244","line":7,"column":10,"nodeType":"233","messageId":"234","endLine":7,"endColumn":17},{"ruleId":"231","severity":1,"message":"243","line":4,"column":27,"nodeType":"233","messageId":"234","endLine":4,"endColumn":33},{"ruleId":"231","severity":1,"message":"245","line":7,"column":8,"nodeType":"233","messageId":"234","endLine":7,"endColumn":22},{"ruleId":"231","severity":1,"message":"246","line":14,"column":12,"nodeType":"233","messageId":"234","endLine":14,"endColumn":16},{"ruleId":"231","severity":1,"message":"247","line":14,"column":18,"nodeType":"233","messageId":"234","endLine":14,"endColumn":24},{"ruleId":"231","severity":1,"message":"248","line":1,"column":8,"nodeType":"233","messageId":"234","endLine":1,"endColumn":13},{"ruleId":"231","severity":1,"message":"249","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"250","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":26},{"ruleId":"231","severity":1,"message":"251","line":3,"column":9,"nodeType":"233","messageId":"234","endLine":3,"endColumn":13},{"ruleId":"231","severity":1,"message":"246","line":13,"column":12,"nodeType":"233","messageId":"234","endLine":13,"endColumn":16},{"ruleId":"231","severity":1,"message":"252","line":15,"column":11,"nodeType":"233","messageId":"234","endLine":15,"endColumn":19},{"ruleId":"231","severity":1,"message":"253","line":19,"column":11,"nodeType":"233","messageId":"234","endLine":19,"endColumn":19},{"ruleId":"231","severity":1,"message":"254","line":22,"column":11,"nodeType":"233","messageId":"234","endLine":22,"endColumn":15},{"ruleId":"231","severity":1,"message":"255","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":13},{"ruleId":"231","severity":1,"message":"256","line":5,"column":9,"nodeType":"233","messageId":"234","endLine":5,"endColumn":19},{"ruleId":"231","severity":1,"message":"257","line":6,"column":9,"nodeType":"233","messageId":"234","endLine":6,"endColumn":25},{"ruleId":"231","severity":1,"message":"258","line":12,"column":12,"nodeType":"233","messageId":"234","endLine":12,"endColumn":20},{"ruleId":"231","severity":1,"message":"259","line":15,"column":12,"nodeType":"233","messageId":"234","endLine":15,"endColumn":21},{"ruleId":"231","severity":1,"message":"260","line":17,"column":11,"nodeType":"233","messageId":"234","endLine":17,"endColumn":17},{"ruleId":"231","severity":1,"message":"255","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":13},{"ruleId":"231","severity":1,"message":"258","line":12,"column":12,"nodeType":"233","messageId":"234","endLine":12,"endColumn":20},{"ruleId":"231","severity":1,"message":"261","line":13,"column":11,"nodeType":"233","messageId":"234","endLine":13,"endColumn":18},{"ruleId":"231","severity":1,"message":"262","line":13,"column":20,"nodeType":"233","messageId":"234","endLine":13,"endColumn":30},{"ruleId":"231","severity":1,"message":"263","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":16},{"ruleId":"231","severity":1,"message":"264","line":2,"column":31,"nodeType":"233","messageId":"234","endLine":2,"endColumn":42},{"ruleId":"231","severity":1,"message":"265","line":13,"column":12,"nodeType":"233","messageId":"234","endLine":13,"endColumn":17},{"ruleId":"231","severity":1,"message":"266","line":13,"column":19,"nodeType":"233","messageId":"234","endLine":13,"endColumn":27},{"ruleId":"231","severity":1,"message":"267","line":14,"column":12,"nodeType":"233","messageId":"234","endLine":14,"endColumn":20},{"ruleId":"231","severity":1,"message":"268","line":14,"column":22,"nodeType":"233","messageId":"234","endLine":14,"endColumn":33},{"ruleId":"231","severity":1,"message":"241","line":2,"column":17,"nodeType":"233","messageId":"234","endLine":2,"endColumn":20},{"ruleId":"231","severity":1,"message":"269","line":2,"column":39,"nodeType":"233","messageId":"234","endLine":2,"endColumn":42},{"ruleId":"231","severity":1,"message":"255","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":13},{"ruleId":"231","severity":1,"message":"270","line":6,"column":22,"nodeType":"233","messageId":"234","endLine":6,"endColumn":32},{"ruleId":"231","severity":1,"message":"271","line":30,"column":11,"nodeType":"233","messageId":"234","endLine":30,"endColumn":18},{"ruleId":"231","severity":1,"message":"272","line":31,"column":11,"nodeType":"233","messageId":"234","endLine":31,"endColumn":18},{"ruleId":"231","severity":1,"message":"273","line":32,"column":11,"nodeType":"233","messageId":"234","endLine":32,"endColumn":18},{"ruleId":"231","severity":1,"message":"274","line":33,"column":11,"nodeType":"233","messageId":"234","endLine":33,"endColumn":18},{"ruleId":"231","severity":1,"message":"275","line":35,"column":11,"nodeType":"233","messageId":"234","endLine":35,"endColumn":20},{"ruleId":"231","severity":1,"message":"276","line":36,"column":11,"nodeType":"233","messageId":"234","endLine":36,"endColumn":20},{"ruleId":"231","severity":1,"message":"277","line":37,"column":11,"nodeType":"233","messageId":"234","endLine":37,"endColumn":20},{"ruleId":"231","severity":1,"message":"278","line":38,"column":11,"nodeType":"233","messageId":"234","endLine":38,"endColumn":20},{"ruleId":"231","severity":1,"message":"279","line":42,"column":11,"nodeType":"233","messageId":"234","endLine":42,"endColumn":16},{"ruleId":"231","severity":1,"message":"280","line":42,"column":18,"nodeType":"233","messageId":"234","endLine":42,"endColumn":26},{"ruleId":"231","severity":1,"message":"248","line":1,"column":8,"nodeType":"233","messageId":"234","endLine":1,"endColumn":13},{"ruleId":"231","severity":1,"message":"250","line":1,"column":16,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"249","line":1,"column":27,"nodeType":"233","messageId":"234","endLine":1,"endColumn":35},{"ruleId":"231","severity":1,"message":"255","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":13},{"ruleId":"231","severity":1,"message":"281","line":5,"column":9,"nodeType":"233","messageId":"234","endLine":5,"endColumn":23},{"ruleId":"231","severity":1,"message":"256","line":5,"column":25,"nodeType":"233","messageId":"234","endLine":5,"endColumn":35},{"ruleId":"231","severity":1,"message":"282","line":8,"column":9,"nodeType":"233","messageId":"234","endLine":8,"endColumn":18},{"ruleId":"231","severity":1,"message":"283","line":13,"column":9,"nodeType":"233","messageId":"234","endLine":13,"endColumn":22},{"ruleId":"231","severity":1,"message":"258","line":15,"column":12,"nodeType":"233","messageId":"234","endLine":15,"endColumn":20},{"ruleId":"231","severity":1,"message":"261","line":16,"column":11,"nodeType":"233","messageId":"234","endLine":16,"endColumn":18},{"ruleId":"231","severity":1,"message":"262","line":16,"column":20,"nodeType":"233","messageId":"234","endLine":16,"endColumn":30},{"ruleId":"231","severity":1,"message":"269","line":2,"column":35,"nodeType":"233","messageId":"234","endLine":2,"endColumn":38},{"ruleId":"231","severity":1,"message":"284","line":13,"column":18,"nodeType":"233","messageId":"234","endLine":13,"endColumn":25},{"ruleId":"231","severity":1,"message":"285","line":15,"column":26,"nodeType":"233","messageId":"234","endLine":15,"endColumn":41},{"ruleId":"231","severity":1,"message":"286","line":16,"column":27,"nodeType":"233","messageId":"234","endLine":16,"endColumn":43},{"ruleId":"231","severity":1,"message":"287","line":17,"column":26,"nodeType":"233","messageId":"234","endLine":17,"endColumn":41},{"ruleId":"231","severity":1,"message":"288","line":19,"column":9,"nodeType":"233","messageId":"234","endLine":19,"endColumn":22},{"ruleId":"231","severity":1,"message":"248","line":1,"column":8,"nodeType":"233","messageId":"234","endLine":1,"endColumn":13},{"ruleId":"237","severity":1,"message":"289","line":31,"column":7,"nodeType":"239","endLine":31,"endColumn":12,"suggestions":"290"},{"ruleId":"231","severity":1,"message":"269","line":2,"column":35,"nodeType":"233","messageId":"234","endLine":2,"endColumn":38},{"ruleId":"231","severity":1,"message":"248","line":1,"column":8,"nodeType":"233","messageId":"234","endLine":1,"endColumn":13},{"ruleId":"237","severity":1,"message":"291","line":39,"column":7,"nodeType":"239","endLine":39,"endColumn":22,"suggestions":"292"},{"ruleId":"237","severity":1,"message":"293","line":75,"column":7,"nodeType":"239","endLine":75,"endColumn":26,"suggestions":"294"},{"ruleId":"237","severity":1,"message":"291","line":119,"column":7,"nodeType":"239","endLine":119,"endColumn":41,"suggestions":"295"},{"ruleId":"237","severity":1,"message":"296","line":154,"column":7,"nodeType":"239","endLine":154,"endColumn":23,"suggestions":"297"},{"ruleId":"237","severity":1,"message":"298","line":190,"column":7,"nodeType":"239","endLine":190,"endColumn":28,"suggestions":"299"},{"ruleId":"231","severity":1,"message":"251","line":3,"column":10,"nodeType":"233","messageId":"234","endLine":3,"endColumn":14},{"ruleId":"300","severity":1,"message":"301","line":16,"column":13,"nodeType":"302","messageId":"303","endLine":16,"endColumn":15},{"ruleId":"300","severity":1,"message":"301","line":20,"column":19,"nodeType":"302","messageId":"303","endLine":20,"endColumn":21},{"ruleId":"300","severity":1,"message":"301","line":23,"column":19,"nodeType":"302","messageId":"303","endLine":23,"endColumn":21},{"ruleId":"300","severity":1,"message":"301","line":26,"column":19,"nodeType":"302","messageId":"303","endLine":26,"endColumn":21},{"ruleId":"300","severity":1,"message":"301","line":29,"column":19,"nodeType":"302","messageId":"303","endLine":29,"endColumn":21},{"ruleId":"300","severity":1,"message":"301","line":32,"column":19,"nodeType":"302","messageId":"303","endLine":32,"endColumn":21},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'AuthenticatedApp' is assigned a value but never used.","'AuthenticatedManagerApp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'login' and 'logout'. Either include them or remove the dependency array.","ArrayExpression",["306"],"'Col' is defined but never used.","'login' is assigned a value but never used.","'Router' is defined but never used.","'useAuth' is defined but never used.","'TextManagement' is defined but never used.","'user' is assigned a value but never used.","'logout' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'setModal' is assigned a value but never used.","'textById' is assigned a value but never used.","'size' is assigned a value but never used.","'axios' is defined but never used.","'deleteText' is defined but never used.","'TextDisplayModal' is defined but never used.","'register' is assigned a value but never used.","'modalShow' is assigned a value but never used.","'reload' is assigned a value but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'Button' is defined but never used.","'NavDropdown' is defined but never used.","'click' is assigned a value but never used.","'setClick' is assigned a value but never used.","'dropdown' is assigned a value but never used.","'setDropdown' is assigned a value but never used.","'Row' is defined but never used.","'addAnswers' is defined but never used.","'answer1' is assigned a value but never used.","'answer2' is assigned a value but never used.","'answer3' is assigned a value but never used.","'answer4' is assigned a value but never used.","'checkbox1' is assigned a value but never used.","'checkbox2' is assigned a value but never used.","'checkbox3' is assigned a value but never used.","'checkbox4' is assigned a value but never used.","'maxId' is assigned a value but never used.","'setMaxId' is assigned a value but never used.","'deleteQuestion' is defined but never used.","'useParams' is defined but never used.","'questionsById' is defined but never used.","'setType' is assigned a value but never used.","'setPropertyName' is assigned a value but never used.","'setPropertyValue' is assigned a value but never used.","'setPropertyType' is assigned a value but never used.","'onButtonClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'headers'. Either include it or remove the dependency array.",["307"],"React Hook useEffect has missing dependencies: 'restText.error' and 'restText.loading'. Either include them or remove the dependency array.",["308"],"React Hook useEffect has missing dependencies: 'restQuestion.error' and 'restQuestion.loading'. Either include them or remove the dependency array.",["309"],["310"],"React Hook useEffect has missing dependencies: 'restMedia.error' and 'restMedia.loading'. Either include them or remove the dependency array.",["311"],"React Hook useEffect has missing dependencies: 'restQuestionId.error' and 'restQuestionId.loading'. Either include them or remove the dependency array.",["312"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"317","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},"Update the dependencies array to be: [login, logout]",{"range":"326","text":"327"},"Update the dependencies array to be: [headers, url]",{"range":"328","text":"329"},"Update the dependencies array to be: [restText.data, restText.error, restText.loading]",{"range":"330","text":"331"},"Update the dependencies array to be: [restQuestion.data, restQuestion.error, restQuestion.loading]",{"range":"332","text":"333"},{"range":"334","text":"331"},"Update the dependencies array to be: [restMedia.data, restMedia.error, restMedia.loading]",{"range":"335","text":"336"},"Update the dependencies array to be: [restQuestionId.data, restQuestionId.error, restQuestionId.loading]",{"range":"337","text":"338"},[569,571],"[login, logout]",[809,814],"[headers, url]",[1041,1056],"[restText.data, restText.error, restText.loading]",[1876,1895],"[restQuestion.data, restQuestion.error, restQuestion.loading]",[2980,3014],[3831,3847],"[restMedia.data, restMedia.error, restMedia.loading]",[4671,4692],"[restQuestionId.data, restQuestionId.error, restQuestionId.loading]"]