[{"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\LoginPage.js":"1","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\TextVisualizationForStudent.js":"2","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\reportWebVitals.js":"3","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\DeveloperNavbar.js":"4","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\index.js":"5","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\CreateNewTestOptions.js":"6","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\ChooseTestAndVisualization.js":"7","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\GenerateRandomTextAndRandomVisualization.js":"8","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\HighlightVisualization.js":"9","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\model\\context\\auth_context.js":"10","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\StudentEntrancePage.js":"11","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\AddQuestion.js":"12","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\repositories\\TestRepository.js":"13","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\model\\requests\\TextModelRestAPI.js":"14","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\StudentQuestions.js":"15","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\WithOutVisualization.js":"16","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\App.js":"17","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\FontSizeVisualization.js":"18","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\TestManagement.js":"19","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\DeveloperApp.js":"20","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\GradualHighlightVisualization.js":"21","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\StudentTestPage.js":"22","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\model\\requests\\StudentModelRestAPI.js":"23","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\DeleteQuestion.js":"24","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\TestRow.js":"25","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\SummaryOnlyVisualization.js":"26","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\TextManagement.js":"27","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\VisualizationDisplayModal.js":"28","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\StudentSummary.js":"29","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\TextVisualization.js":"30","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\GradualFontVisualization.js":"31","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\GenerateRandomTextAndChooseVisualization.js":"32","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\StudentExplanationPage.js":"33","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\DeleteTextPage.js":"34","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\RandomVisualizationDispalyModal.js":"35","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\LoginCard.js":"36","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\StudentEntrance.js":"37","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\model\\requests\\UserModelRestAPI.js":"38","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\model\\requests\\TestModelRestAPI.js":"39","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\TextDisplayModel.js":"40","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\HomePage.js":"41","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\TheLastPage.js":"42","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\DeleteTestModal.js":"43","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\BeforeRankingPage.js":"44"},{"size":1125,"mtime":1615736018370,"results":"45","hashOfConfig":"46"},{"size":1877,"mtime":1618939037891,"results":"47","hashOfConfig":"46"},{"size":375,"mtime":1615736018377,"results":"48","hashOfConfig":"46"},{"size":1640,"mtime":1618694564030,"results":"49","hashOfConfig":"46"},{"size":718,"mtime":1615736018374,"results":"50","hashOfConfig":"46"},{"size":2016,"mtime":1619817109887,"results":"51","hashOfConfig":"46"},{"size":5316,"mtime":1618694564038,"results":"52","hashOfConfig":"46"},{"size":3798,"mtime":1618694564041,"results":"53","hashOfConfig":"46"},{"size":756,"mtime":1618694848324,"results":"54","hashOfConfig":"46"},{"size":1678,"mtime":1615736018375,"results":"55","hashOfConfig":"46"},{"size":1282,"mtime":1618694596325,"results":"56","hashOfConfig":"46"},{"size":11939,"mtime":1617293027029,"results":"57","hashOfConfig":"46"},{"size":1186,"mtime":1618694564044,"results":"58","hashOfConfig":"46"},{"size":5740,"mtime":1618694564043,"results":"59","hashOfConfig":"46"},{"size":4096,"mtime":1619817070757,"results":"60","hashOfConfig":"46"},{"size":236,"mtime":1615736018372,"results":"61","hashOfConfig":"46"},{"size":823,"mtime":1617459247228,"results":"62","hashOfConfig":"46"},{"size":757,"mtime":1618694848332,"results":"63","hashOfConfig":"46"},{"size":1072,"mtime":1618694564042,"results":"64","hashOfConfig":"46"},{"size":2172,"mtime":1618694564040,"results":"65","hashOfConfig":"46"},{"size":466,"mtime":1619817109892,"results":"66","hashOfConfig":"46"},{"size":4219,"mtime":1619816979256,"results":"67","hashOfConfig":"46"},{"size":2735,"mtime":1619546068348,"results":"68","hashOfConfig":"46"},{"size":5498,"mtime":1617293027030,"results":"69","hashOfConfig":"46"},{"size":1576,"mtime":1618694564035,"results":"70","hashOfConfig":"46"},{"size":680,"mtime":1618694848344,"results":"71","hashOfConfig":"46"},{"size":2834,"mtime":1617293027036,"results":"72","hashOfConfig":"46"},{"size":3811,"mtime":1618694596341,"results":"73","hashOfConfig":"46"},{"size":1474,"mtime":1618694596321,"results":"74","hashOfConfig":"46"},{"size":498,"mtime":1618768576205,"results":"75","hashOfConfig":"46"},{"size":302,"mtime":1615736018360,"results":"76","hashOfConfig":"46"},{"size":5019,"mtime":1619817109890,"results":"77","hashOfConfig":"46"},{"size":2826,"mtime":1618694596326,"results":"78","hashOfConfig":"46"},{"size":5276,"mtime":1617293027031,"results":"79","hashOfConfig":"46"},{"size":1760,"mtime":1618694564032,"results":"80","hashOfConfig":"46"},{"size":1626,"mtime":1615736018361,"results":"81","hashOfConfig":"46"},{"size":1753,"mtime":1618694596320,"results":"82","hashOfConfig":"46"},{"size":480,"mtime":1617292834451,"results":"83","hashOfConfig":"46"},{"size":1542,"mtime":1618694564043,"results":"84","hashOfConfig":"46"},{"size":1604,"mtime":1618694596322,"results":"85","hashOfConfig":"46"},{"size":907,"mtime":1617293134403,"results":"86","hashOfConfig":"46"},{"size":878,"mtime":1619817109897,"results":"87","hashOfConfig":"46"},{"size":1347,"mtime":1618694564029,"results":"88","hashOfConfig":"46"},{"size":828,"mtime":1619817755723,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"3xq300",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"92"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"95"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"121"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"154"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"95"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\LoginPage.js",[],["202","203"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\TextVisualizationForStudent.js",[],["204","205"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\reportWebVitals.js",[],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\DeveloperNavbar.js",["206","207","208","209","210","211"],"import React, { useState } from 'react';\r\nimport { Button, Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useAuth } from '../model/context/auth_context'\r\n\r\nimport * as ReactBootStrap from \"react-bootstrap\";\r\n\r\n\r\n\r\nexport default function DeveloperNavbar (){\r\n    const {user, logout} = useAuth()\r\n\r\n    const [click, setClick] = useState(false);\r\n    const [dropdown, setDropdown] = useState(false);\r\n\r\nreturn (\r\n    <>\r\n    <Navbar bg=\"light\" variant=\"light\">\r\n        <Navbar.Brand href=\"/\" className=\"font-weight-bold\">Visual Summary</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\r\n            {user && <Nav.Link as={Link} to=\"/testManagement\">Tests</Nav.Link>}\r\n\r\n            {user &&\r\n            <ReactBootStrap.NavDropdown title=\"Texts\" id=\"collasible-nav-dropdown\">\r\n                <ReactBootStrap.NavDropdown.Item href=\"/add-text\">Upload Text</ReactBootStrap.NavDropdown.Item>\r\n                <ReactBootStrap.NavDropdown.Item href=\"/delete-text\">Delete Text</ReactBootStrap.NavDropdown.Item>\r\n                <ReactBootStrap.NavDropdown.Item href=\"/add-question\">Add Question</ReactBootStrap.NavDropdown.Item>\r\n                <ReactBootStrap.NavDropdown.Item href=\"/delete-question\">Delete Question</ReactBootStrap.NavDropdown.Item>\r\n\r\n            </ReactBootStrap.NavDropdown>\r\n            }\r\n        </Nav>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <Nav>\r\n             {user ? <Nav.Link as={Link} to=\"/\" onClick={logout}>Logout</Nav.Link> : <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>}\r\n        </Nav>\r\n    </Navbar>\r\n    </>\r\n)}",["212","213"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\index.js",[],["214","215"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\CreateNewTestOptions.js",["216","217","218","219","220","221","222"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\ChooseTestAndVisualization.js",["223","224","225","226","227"],"import React, { useEffect, useState } from 'react';\r\nimport {Link, useParams, useLocation} from \"react-router-dom\";\r\nimport * as textRepository from \"../../repositories/TextRepository\";\r\nimport * as testRepository from \"../../repositories/TestRepository\"\r\nimport {Button, Col, Container, Row} from \"react-bootstrap\";\r\nimport {VisualizationDisplayModal} from \"../VisualizationDisplayModal\";\r\n\r\nexport default function ChooseTestAndVisualization(props) {\r\n\r\n    let location = useLocation();\r\n    let type = location.state.type\r\n    let testName = location.state.testName\r\n    const { id } = useParams()\r\n    const textById = textRepository.useGetTextById(id)\r\n    const [modalShow,setModalShow] = useState([false,false,false,false,false,false,false,false,false,false,false,false])\r\n\r\n    const size = 10\r\n    const [dropdown, setDropdown] = useState([0,0,0,0,0,0,0,0,0,0,0,0]);\r\n    const [propertyName,setPropertyName] = useState([\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\"])\r\n    const [propertyValue,setPropertyValue] = useState([\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\"])\r\n    const [propertyType,setPropertyType] = useState([\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\"])\r\n    const [visualizationType,setVisualizationType] = useState([\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\",\"none\"])\r\n    const [selectedTexts,setSelectedTexts] = useState([0,0,0,0,0,0,0,0,0,0,0,0])\r\n    let callbackFunction = (propName,propValue,propType,visualType,textID,index) => {\r\n\r\n        let newPropertyName = [...propertyName]\r\n        newPropertyName[index]=propName\r\n        setPropertyName(newPropertyName)\r\n\r\n        let newPropertyValue = [...propertyValue]\r\n        newPropertyValue[index]=propValue\r\n        setPropertyValue(newPropertyValue)\r\n\r\n        let newPropertyType = [...propertyType]\r\n        newPropertyType[index]=propType\r\n        setPropertyType(newPropertyType)\r\n\r\n        let newVisualizationType = [...visualizationType]\r\n        newVisualizationType[index]=visualType\r\n        setVisualizationType(newVisualizationType)\r\n\r\n        let newSelectedTexts = [...selectedTexts]\r\n        newSelectedTexts[index]=textID\r\n        setSelectedTexts(newSelectedTexts)\r\n    }\r\n\r\n    let saveFullTest = function(event){\r\n\r\n        for (let i = 0; i < 12; i++) {\r\n            textRepository.save(visualizationType[i],selectedTexts[i],propertyName[i],propertyValue[i],propertyType[i],testName)\r\n        }\r\n        testRepository.saveTest(testName,\"Choose Tests And Visualizations\")\r\n\r\n        // textRepository.save(type,id,propertyName,propertyValue,propertyType)\r\n        // props.onHide()\r\n    }\r\n    let texts = textRepository.useGetAllText()\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h2 className=\"mb-3 text-left\">Test: {testName}</h2><br/>\r\n                <text>Choose Tests And Visualizations</text><br/>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col></Col>\r\n                    <Col xs=\"9\">\r\n                        <div>\r\n                            {\r\n                                dropdown.map((value, index) => {\r\n                                    return (\r\n                                        <>\r\n                                            <select value={dropdown[index]} onChange={(e)=>{\r\n                                                let arr=[...dropdown]\r\n                                                arr[index] = parseInt(e.target.value)\r\n                                                setDropdown(arr)\r\n                                            }}>\r\n                                                {texts && texts.data ? texts.data.map(text => (\r\n                                                    <option value={text.id}>{text.name}</option>\r\n                                                )) : null}\r\n                                            </select>\r\n                                            {'    '}<Button onClick={(e)=>{\r\n                                            let arr=[...modalShow]\r\n                                            arr[index] = true\r\n                                            setModalShow(arr)\r\n                                        }}>Choose Visualization</Button> <b>Visualization: {visualizationType[index]}</b><br/><br/>\r\n                                            <VisualizationDisplayModal show={modalShow[index]} onHide={() => {\r\n                                                let arr=[...modalShow]\r\n                                                arr[index] = false\r\n                                                setModalShow(arr)\r\n                                            }} text={dropdown[index]} parentCallback = {callbackFunction} index={index}></VisualizationDisplayModal>\r\n                                        </>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n\r\n\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Button className=\"btn btn-primary\" onClick={saveFullTest}>SAVE TEST</Button><br/><br/><br/>\r\n            </Container>\r\n        </>);\r\n}",["228","229"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\GenerateRandomTextAndRandomVisualization.js",["230","231","232","233","234","235"],"import React, { useEffect, useState } from 'react';\r\nimport {useParams, useLocation} from \"react-router-dom\";\r\nimport * as textRepository from \"../../repositories/TextRepository\";\r\nimport {Button, Col, Container, Row} from \"react-bootstrap\";\r\nimport {VisualizationDisplayModal} from \"../VisualizationDisplayModal\";\r\nimport {RandomVisualizationDisplayModal} from \"../RandomVisualizationDispalyModal\";\r\nimport * as testRepository from \"../../repositories/TestRepository\";\r\n\r\n\r\nexport default function GenerateRandomTextAndRandomVisualization() {\r\n\r\n    let location = useLocation();\r\n    let testName = location.state.testName\r\n    // const { id } = useParams()\r\n    // const textById = textRepository.useGetTextById(id)\r\n    const [modalShow,setModalShow] = useState([false,false,false,false,false,false,false,false,false,false])\r\n    const size = 10\r\n    const [dropdown, setDropdown] = useState([0,0,0,0,0,0,0,0,0,0]);\r\n\r\n\r\n    const texts = textRepository.useRandomTextAndVisualization()\r\n    let saveFullTest = function(event){\r\n\r\n        for (let i = 0; i < 12; i++) {\r\n            // if(texts[i]. == \"Without Visualization\"){\r\n            //     //textRepository.save(texts[i][\"visualization\"],texts[i][\"text\"],\"none\",\"none\",\"none\",testName)\r\n            // }\r\n            // else if(texts[i].visualization == \"Summary Only\"){\r\n            //     textRepository.save(texts[i].visualization,texts[i].text,\"none\",\"none\",\"none\",testName)\r\n            // }\r\n            // else if(texts[i].visualization == \"Gradual Highlight\"){\r\n            //     textRepository.save(texts[i].visualization,texts[i].text,\"color\",\"yellow\",\"str\",testName)\r\n            // }\r\n            // else if(texts[i].visualization == \"Highlight\"){\r\n            //     textRepository.save(texts[i].visualization,texts[i].text,\"color\",\"yellow\",\"str\",testName)\r\n            // }\r\n            // else if(texts[i].visualization == \"Increased Font\"){\r\n            //     textRepository.save(texts[i].visualization,texts[i].text,\"font\",\"18\",\"int\",testName)\r\n            // }\r\n            // else if(texts[i].visualization == \"Summary Only\"){\r\n            //     textRepository.save(texts[i].visualization,texts[i].text,\"font\",\"18\",\"int\",testName)\r\n            // }\r\n\r\n        }\r\n        testRepository.saveTest(testName,\"Generate Random Texts And Random Visualizations\")\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h2 className=\"mb-3 text-left\">Test: {testName}</h2><br/>\r\n                <text>Generate Random Texts And Random Visualizations</text><br/><br/><br/>\r\n                {texts && texts.data ? texts.data.map((text,index) => (\r\n                    <Row className=\"justify-content-center\">\r\n                        <Col>\r\n                            <p>{text.name}</p>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button onClick={(e)=>{\r\n                                let arr=[...modalShow]\r\n                                arr[text.id] = true\r\n                                setModalShow(arr)\r\n                            }}>Show Visualization</Button> <b>  Visualization: {text.visualization}</b><br/><br/>\r\n                            <RandomVisualizationDisplayModal visualization={text.visualization} show={modalShow[text.id]} onHide={() => {\r\n                                let arr=[...modalShow]\r\n                                arr[text.id] = false\r\n                                setModalShow(arr)\r\n                            }} text={text.id}></RandomVisualizationDisplayModal>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                )) : null}\r\n                <Button className=\"btn btn-primary\" onClick={saveFullTest}>SAVE TEST</Button><br/><br/><br/>\r\n            </Container>\r\n        </>);\r\n}","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\HighlightVisualization.js",[],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\model\\context\\auth_context.js",["236"],"import React, { useEffect, useState } from 'react'\r\nimport  * as provider from \"../hooks/authentication_provider\"\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst AuthContext = React.createContext()\r\nAuthContext.displayName = 'AuthContext'\r\n\r\nexport function AuthProvider({children}){\r\n    \r\n    const history = useHistory()\r\n\r\n    useEffect(() =>{\r\n        provider.load_user_details().then(function (user){\r\n            setValue({\r\n                user: user,\r\n                login: login,\r\n                logout: logout\r\n            })\r\n        })\r\n    },[])\r\n\r\n    const login = (user_data) => {\r\n        provider.userLogin(user_data).then(function (user){\r\n            setValue({\r\n                user: user,\r\n                login: login,\r\n                logout: logout\r\n            })\r\n            history.push('/')\r\n        })\r\n        .catch(function(err){\r\n            setValue({\r\n                user: null,\r\n                login: login,\r\n                logout: logout\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    const logout = () => {\r\n        provider.userLogout()\r\n        setValue({\r\n            user: null,\r\n            login: login,\r\n            logout: logout\r\n        })\r\n    }\r\n\r\n    const [value, setValue] = useState({\r\n        user: null,\r\n        login: login,\r\n        logout: logout\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport function useAuth() {\r\n    const context = React.useContext(AuthContext)\r\n    if (context === undefined) {\r\n      throw new Error(`useAuth must be used within a AuthProvider`)\r\n    }\r\n    return context\r\n}","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\StudentEntrancePage.js",[],["237","238"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\AddQuestion.js",["239","240","241","242","243","244","245"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Col, Container, Form, Modal, Row} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport * as textRepository from \"../../repositories/TextRepository\";\r\nimport {TextDisplayModal} from \"../TextDisplayModel\";\r\nimport {addQuestion, addAnswers} from \"../../model/requests/TextModelRestAPI\";\r\n\r\n\r\nexport default function AddQuestion() {\r\n\r\n    const [dropdown, setDropdown] = useState([0]);\r\n    const texts = textRepository.useGetAllText()\r\n    const [modalShow,setModalShow] = useState([false])\r\n    const [arr,setArr] = useState([0])\r\n    const [ques_num,setQues_num] = useState([0])\r\n    const[que_content, setQue_content]= useState(\"\");\r\n\r\n    const[answer1, setAnswer1]= useState(\"\");\r\n    const[answer2, setAnswer2]= useState(\"\");\r\n    const[answer3, setAnswer3]= useState(\"\");\r\n    const[answer4, setAnswer4]= useState(\"\");\r\n\r\n    const[checkbox1, setCheckbox1]= useState(\"false\");\r\n    const[checkbox2, setCheckbox2]= useState(\"false\");\r\n    const[checkbox3, setCheckbox3]= useState(\"false\");\r\n    const[checkbox4, setCheckbox4]= useState(\"false\");\r\n\r\n    const [show, setShow] = useState(false);\r\n    const reload=()=>window.location.reload();\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n        reload();\r\n    };\r\n\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n               <h2 className=\"mb-3 text-left\">Add Question:</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h4 className=\"mb-3 text-left\">Add Question for Text:</h4>\r\n                            <Form>\r\n                                <div>\r\n                                    {\r\n                                        dropdown.map((value, index) => {\r\n                                            return (\r\n                                                <>\r\n                                                    <select value={dropdown[index]} onChange={(e)=>{\r\n                                                        setArr([...dropdown])\r\n                                                        arr[index] = parseInt(e.target.value)\r\n                                                        setDropdown(arr)\r\n                                                    }}>\r\n                                                        {texts && texts.data ? texts.data.map(text => (\r\n                                                            <option value={text.id}>{text.name}</option>\r\n                                                        )) : null}\r\n                                                    </select> {'    '}<Button onClick={(e)=>{\r\n                                                    setArr([...dropdown])\r\n                                                    arr[index] = true\r\n                                                    setModalShow(arr)\r\n                                                }}>Show Text</Button><br/><br/>\r\n\r\n                                                    <TextDisplayModal show={modalShow[index]} onHide={() => {\r\n                                                        setArr([...dropdown])\r\n                                                        arr[index] = false\r\n                                                        setModalShow(arr)\r\n                                                    }} text={dropdown[index]}></TextDisplayModal>\r\n\r\n                                                    <Form.Group controlId=\"formBasicQuestion\">\r\n                                                            <Form.Label>Question:</Form.Label>\r\n                                                            <Form.Control type=\"question\" placeholder=\"Enter the Question here\" name= 'question' onChange={(e)=>{\r\n                                                                setQue_content(e.target.value);\r\n                                                            }} />\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group controlId=\"formBasicAnswer1\">\r\n                                                            <Form.Label>Answer 1:</Form.Label>\r\n                                                            <Form.Control type=\"answer1\" placeholder=\"Enter Answer 1 here\" onChange={(e)=>{\r\n                                                                setAnswer1(e.target.value);\r\n                                                            }} />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group controlId=\"formBasicAnswer2\">\r\n                                                            <Form.Label>Answer 2:</Form.Label>\r\n                                                            <Form.Control type=\"answer2\" placeholder=\"Enter Answer 2 here\" onChange={(e)=>{\r\n                                                                setAnswer2(e.target.value);\r\n                                                            }} />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group controlId=\"formBasicAnswer3\">\r\n                                                            <Form.Label>Answer 3:</Form.Label>\r\n                                                            <Form.Control type=\"answer3\" placeholder=\"Enter Answer 3 here\" onChange={(e)=>{\r\n                                                                setAnswer3(e.target.value);\r\n                                                            }} />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group controlId=\"formBasicAnswer4\">\r\n                                                            <Form.Label>Answer 4:</Form.Label>\r\n                                                            <Form.Control type=\"answer4\" placeholder=\"Enter Answer 4 here\" onChange={(e)=>{\r\n                                                                setAnswer4(e.target.value);\r\n                                                            }} />\r\n                                                        </Form.Group>\r\n\r\n                                                    <h4 className=\"mb-3 text-left\">Check the Correct Answer:</h4>\r\n                                                  <Form.Check\r\n                                                      type=\"radio\"\r\n                                                      name=\"formHorizontalRadios\"\r\n                                                      id=\"formHorizontalRadios1\"\r\n                                                      inline\r\n                                                      label=\"Answer 1\"\r\n                                                      onChange={(e)=>{\r\n                                                          setCheckbox1(\"true\");\r\n                                                      }}\r\n                                                       />\r\n                                                  <Form.Check\r\n                                                      type=\"radio\"\r\n                                                      name=\"formHorizontalRadios\"\r\n                                                      id=\"formHorizontalRadios2\"\r\n                                                      inline\r\n                                                      label=\"Answer 2\"\r\n                                                      onChange={(e)=>{\r\n                                                          setCheckbox2(\"true\");\r\n                                                      }}\r\n                                                  />\r\n                                                  <Form.Check\r\n                                                      type=\"radio\"\r\n                                                      name=\"formHorizontalRadios\"\r\n                                                      id=\"formHorizontalRadios3\"\r\n                                                      inline\r\n                                                      label=\"Answer 3\"\r\n                                                      onChange={(e)=>{\r\n                                                          setCheckbox3(\"true\");\r\n                                                      }}\r\n                                                  />\r\n                                                  <Form.Check\r\n                                                      type=\"radio\"\r\n                                                      name=\"formHorizontalRadios\"\r\n                                                      id=\"formHorizontalRadios4\"\r\n                                                      inline\r\n                                                      label=\"Answer 4\"\r\n                                                      onChange={(e)=>{\r\n                                                          setCheckbox4(\"true\");\r\n                                                      }}\r\n                                                  />\r\n                                                    <br></br><br></br>\r\n\r\n                                                        <Button onClick={(e)=>{\r\n                                                            handleShow()\r\n                                                            let ansDict= {\r\n                                                                '1': {'isCorrect': checkbox1, 'content': answer1},\r\n                                                                '2': {'isCorrect': checkbox2, 'content': answer2},\r\n                                                                '3': {'isCorrect': checkbox3, 'content': answer3},\r\n                                                                '4': {'isCorrect': checkbox4, 'content': answer4}\r\n                                                            }\r\n                                                            addQuestion(dropdown[index], que_content, ansDict)\r\n                                                        }}>Save</Button>\r\n\r\n                                                    <Modal\r\n                                                        show={show}\r\n                                                        onHide={handleClose}\r\n                                                        backdrop=\"static\"\r\n                                                        keyboard={false}\r\n                                                    >\r\n                                                        <Modal.Header closeButton>\r\n                                                            <Modal.Title>Message</Modal.Title>\r\n                                                        </Modal.Header>\r\n                                                        <Modal.Body>\r\n                                                            Question Added!\r\n                                                        </Modal.Body>\r\n                                                        <Modal.Footer>\r\n                                                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                                Close\r\n                                                            </Button>\r\n                                                        </Modal.Footer>\r\n                                                    </Modal>\r\n                                                </>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </Form>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </>);\r\n}","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\repositories\\TestRepository.js",["246","247","248"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\model\\requests\\TextModelRestAPI.js",["249","250","251","252"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\StudentQuestions.js",["253","254"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\WithOutVisualization.js",[],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\App.js",["255","256","257"],"import React from 'react'\r\nimport logo from './logo.svg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { useAuth } from './model/context/auth_context'\r\nimport { HomePage } from './components/pages/HomePage';\r\nconst DeveloperApp = React.lazy(() => import('./components/pages/DeveloperApp'))\r\nconst AuthenticatedApp = React.lazy(() => import('./components/pages/AuthenticatedApp'))\r\nconst AuthenticatedManagerApp = React.lazy(() => import('./components/pages/AuthenticatedApp'))\r\nconst UnauthenticatedApp = React.lazy(() => import('./components/pages/UnAuthenticatedApp'))\r\n\r\nfunction App() {\r\n\r\n  const {user} = useAuth()\r\n  return (\r\n    <React.Suspense fallback={<HomePage />}>\r\n       {user ? <DeveloperApp /> : <UnauthenticatedApp />}\r\n    </React.Suspense>\r\n  )\r\n}\r\n\r\nexport default App;","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\FontSizeVisualization.js",[],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\TestManagement.js",["258","259","260","261","262","263","264","265","266","267"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\DeveloperApp.js",["268","269"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { HomePage } from './HomePage';\r\nimport TestManagement from './TestManagement';\r\nimport { useAuth } from '../../model/context/auth_context';\r\nimport DeveloperNavbar from '../DeveloperNavbar';\r\nimport CreateNewTestOptions from \"./CreateNewTestOptions\";\r\nimport ChooseTestAndVisualization from \"./ChooseTestAndVisualization\";\r\nimport GenerateRandomTextsAndChooseVisualization from \"./GenerateRandomTextAndChooseVisualization\";\r\nimport GenerateRandomTextAndRandomVisualization from \"./GenerateRandomTextAndRandomVisualization\";\r\nimport TextManagement from \"./TextManagement\";\r\nimport DeleteText from \"./DeleteTextPage\"\r\nimport AddQuestion from \"./AddQuestion\";\r\nimport DeleteQuestion from \"./DeleteQuestion\";\r\n\r\nfunction AuthenticatedApp() {\r\n\r\n    return (\r\n        <>\r\n            <DeveloperNavbar/>\r\n            <Switch>\r\n                <Route path='/' exact component={HomePage} />\r\n                <Route path='/testManagement' component={TestManagement} />\r\n                <Route path='/new_test_options' component={CreateNewTestOptions} />\r\n                <Route path='/add-text' component={TextManagement} />\r\n                <Route path='/delete-text' component={DeleteText} />\r\n                {<Route path='/add-question' component={AddQuestion} />}\r\n                {<Route path='/delete-question' component={DeleteQuestion} />}\r\n                {/*<Route path='/texts/:id' component={} />*/}\r\n                <Route path='/ChooseTextsAndVisualizations' component={ChooseTestAndVisualization} />\r\n                <Route path='/GenerateRandomTextsAndChooseVisualizations' component={GenerateRandomTextsAndChooseVisualization} />\r\n                <Route path='/GenerateRandomTextsAndRandomVisualizations' component={GenerateRandomTextAndRandomVisualization} />\r\n\r\n\r\n                {/*<Route path='/create-text' component={} />*/}\r\n                {/*<Route path='/texts/:id' component={} />*/}\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthenticatedApp;\r\n",["270","271"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\GradualHighlightVisualization.js",["272"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\StudentTestPage.js",["273","274","275","276","277","278","279","280","281"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\model\\requests\\StudentModelRestAPI.js",["282"],"import React ,{useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {getToken} from \"../hooks/authentication_provider\";\r\n\r\nexport function useAxiosGet(url){\r\n    const [request, setRequest] = useState({\r\n        loading: false,\r\n        data: null,\r\n        error: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        setRequest({\r\n            loading: true,\r\n            data: null,\r\n            error: false\r\n        })\r\n        axios.get(url).then( response => {\r\n            setRequest({\r\n                loading: false,\r\n                data: response.data,\r\n                error: false\r\n            })\r\n        }).catch( () => {\r\n            setRequest({\r\n                loading: false,\r\n                data: null,\r\n                error: true\r\n            })\r\n        })\r\n    },[url])\r\n\r\n    return request\r\n}\r\n\r\n\r\n// roman\r\nexport function set_student_info(props){\r\n    const url = 'http://127.0.0.1:5000/student/set_info'\r\n    // console.log(props)\r\n    const body = props\r\n    // console.log(body)\r\n    return axios.post(url, body)\r\n}\r\n\r\n// roman\r\nexport function get_test_id(){\r\n    const url = 'http://127.0.0.1:5000/student/get_test_id'\r\n    // const headers = {headers : {\"x-auth-token\": getToken()}}\r\n    let response = axios.get(url)\r\n    return response\r\n}\r\n\r\nexport function get_questions_and_answers(text_id) {\r\n    console.log(\"im here - get_questions_and_answers1\")\r\n    const url = `http://127.0.0.1:5000/student/get_questions/${text_id}`\r\n    // const headers = {headers: {\"x-auth-token\": getToken()}}\r\n    let response = axios.get(url)\r\n    return response\r\n}\r\n\r\nexport function send_info_on_text(results) {\r\n    console.log(\"im here - send_info_on_text\")\r\n    console.log(results)\r\n    const url = 'http://127.0.0.1:5000/student/set_question_results'\r\n    const body = results\r\n\r\n    return axios.post(url, body)\r\n}\r\n\r\nexport function get_text_ids_by_test_id(test_id) {\r\n    // console.log(\"im here\")\r\n    const url = `http://127.0.0.1:5000/student/get_texts_by_testid/${test_id}`\r\n    let response = axios.get(url)\r\n    // console.log(response)\r\n    return response\r\n}\r\n\r\nexport function get_type_by_text_id(text_id) {\r\n    const url = `http://127.0.0.1:5000/student/get_type_by_text_id/${text_id}`\r\n    let response = axios.get(url).then(response => {return response.data})\r\n    return response\r\n}\r\n\r\nexport function useGetTextWeightsStudent(id){\r\n    const url = `http://127.0.0.1:5000/texts/${id}/weights`\r\n    let response = axios.get(url)\r\n    return response\r\n}\r\n\r\nexport function useGetTextTotalInfo(text_id) {\r\n    const url = `http://127.0.0.1:5000/texts/${text_id}/all_info`\r\n    const headers = {headers: {\"x-auth-token\": getToken()}}\r\n    return useAxiosGet(url, headers, false)\r\n}\r\n","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\DeleteQuestion.js",["283","284","285","286","287","288","289"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Col, Container, Modal, Row} from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport {deleteQuestion, deleteText} from \"../../model/requests/TextModelRestAPI\";\r\nimport * as textRepository from \"../../repositories/TextRepository\";\r\nimport {TextDisplayModal} from \"../TextDisplayModel\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\nexport default function DeleteQuestion() {\r\n\r\n\r\n\r\n    const {register, handleSubmit} = useForm();\r\n    const[que_id, setQue_id]= useState();\r\n    const [text_id,setText_id] = useState()\r\n\r\n    const texts = textRepository.useGetAllText()\r\n    let text_questions = textRepository.useGetAllQuestionsById(text_id)\r\n\r\n    const [modalShow,setModalShow] = useState(false)\r\n    const [show, setShow] = useState(false);\r\n\r\n\r\n    const reload=()=>window.location.reload();\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n        reload();\r\n    };\r\n\r\n    const getTextById = (id) => {\r\n        let filtered = texts.data.filter(text => text.id == id)\r\n        return filtered.length > 0 ? filtered[0] : null;\r\n    };\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <h2 className=\"mb-3 text-left\">Delete Question</h2> <br/><br/>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col></Col>\r\n                    <Col xs=\"9\">\r\n                        <div>\r\n                            <form onSubmit={handleSubmit(onsubmit)}>\r\n                                <h5 className=\"mb-3 text-left\">Choose Text Name:</h5>\r\n                                { texts && texts.data ?\r\n                                    <div>\r\n                                        <select onChange={(e)=>{\r\n                                            setText_id(parseInt(e.target.value))\r\n                                            setQue_id(null)\r\n                                        }}>\r\n                                            <option disabled selected value hidden> -- select an option -- </option>\r\n                                            {texts.data.map(text => (\r\n                                                <option value={text.id}>{text.name}</option>\r\n                                            ))}\r\n                                        </select> {'    '}\r\n                                        {text_id ?\r\n                                            <>\r\n                                                <Button onClick={(e) => {\r\n                                                    setModalShow(true)\r\n                                                }}>\r\n                                                    Show Text\r\n                                                </Button><br/><br/>\r\n                                                <TextDisplayModal show={modalShow} onHide={() => {setModalShow(false)}} text={text_id}></TextDisplayModal>\r\n                                            </> : null }\r\n                                </div> : null }\r\n                                {text_id && text_questions && text_questions.data ?\r\n                                <div>\r\n                                    <select onChange={(e)=>{\r\n                                        setQue_id(parseInt(e.target.value))\r\n                                    }}>\r\n                                        <option disabled selected value hidden> -- select an option -- </option>\r\n                                        {text_questions.data.map(question => (\r\n                                            <option value={question.question_id}>{question.question_content}</option>\r\n                                        ))}\r\n                                    </select> {'    '}\r\n                                    {que_id ?\r\n                                    <Button onClick={(e)=>{\r\n                                        deleteQuestion(que_id)\r\n                                        handleShow()\r\n                                    }}>\r\n                                        Delete\r\n                                    </Button> : null}\r\n\r\n                                    <Modal\r\n                                        show={show}\r\n                                        onHide={handleClose}\r\n                                        backdrop=\"static\"\r\n                                        keyboard={false}\r\n                                    >\r\n                                        <Modal.Header closeButton>\r\n                                            <Modal.Title>Message</Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Body>\r\n                                            Question Deleted!\r\n                                        </Modal.Body>\r\n                                        <Modal.Footer>\r\n                                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                                Close\r\n                                            </Button>\r\n                                        </Modal.Footer>\r\n                                    </Modal>\r\n                                </div> : null}\r\n                            </form>\r\n                        </div>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n            </Container>\r\n        </>);\r\n}\r\n\r\n\r\n",["290","291"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\TestRow.js",["292","293","294"],"import React , {useState} from 'react'\r\nimport { Button, Col, Container, Row } from 'react-bootstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport {DeleteTestModal} from \"./DeleteTestModal\";\r\n\r\n\r\n\r\nexport function TestRow(props){\r\n    const testName = props.testName\r\n    const testType = props.testType\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n\r\n    let EditLink\r\n    if(testType==\"Choose Tests And Visualizations\"){\r\n       EditLink=<Link  className=\"btn btn-light\" to={{pathname:\"/ChooseTextsAndVisualizations\", state:{type: \"edit\", testName: testName}}} >Edit</Link>\r\n    }else if(testType==\"Generate Random Texts And Choose Visualizations\"){\r\n        EditLink=<Link  className=\"btn btn-light\" to={{pathname:\"/GenerateRandomTextsAndChooseVisualizations\", state:{type: \"edit\", testName: testName}}} >Edit</Link>\r\n    }else{\r\n        EditLink=<Link className=\"btn btn-light\" to={{pathname:\"/GenerateRandomTextsAndRandomVisualizations\", state:{type: \"edit\", testName: testName}}} >Edit</Link>\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col><text>{testName}</text></Col>\r\n                <Col>\r\n                    {EditLink}\r\n                    <Button variant=\"light\" onClick={handleShow}>Delete</Button>\r\n                    <DeleteTestModal show={show} onHide={handleClose} name={testName}></DeleteTestModal>\r\n                </Col>\r\n                <Col></Col><Col></Col><Col></Col>\r\n        </Row>\r\n        </div>\r\n    )\r\n}","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\SummaryOnlyVisualization.js",[],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\TextManagement.js",["295","296","297","298","299","300","301","302"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\VisualizationDisplayModal.js",["303"],"import React, {useState} from 'react'\r\nimport {Button, Container, Modal, Row, Col} from 'react-bootstrap';\r\nimport {TextVisualization} from \"./TextVisualization\";\r\nimport * as textRepository from \"../repositories/TextRepository\";\r\nimport \"./Modal.css\"\r\n\r\n\r\n//style={{position: \"absolute\" , left: \"10px\"}}\r\nexport function VisualizationDisplayModal(props) {\r\n  const id = props.text\r\n\r\n  const text1 = textRepository.useGetTextWeights(id)\r\n  const [type, setType] = useState(\"Without Visualization\");\r\n\r\n  const [propertyName, setPropertyName] = useState(\"none\");\r\n  const [propertyValue, setPropertyValue] = useState(\"none\");\r\n  const [propertyType, setPropertyType] = useState(\"none\");\r\n\r\n  let onButtonClick = function(event){\r\n    props.parentCallback(propertyName,propertyValue,propertyType,type,id,props.index)\r\n    // textRepository.save(type,id,propertyName,propertyValue,propertyType)\r\n    props.onHide()\r\n  }\r\n\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n        size=\"xl\"\r\n        dialogClassName=\"my-modal\"\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">Visualization\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <Col >\r\n              <h3>Visualization : {type}</h3>\r\n\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Without Visualization\"} value=\"Without Visualization\" onChange={(e)=>{setType(e.target.value); setPropertyName(\"none\");setPropertyValue(\"none\"); setPropertyType(\"none\")}}/>\r\n                <label>Without Visualization</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Highlight\" } value=\"Highlight\"  onChange={(e)=>{setType(e.target.value); setPropertyName(\"color\"); setPropertyValue(\"yellow\"); setPropertyType(\"str\")}}/>\r\n                <label>Highlight</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Gradual Highlight\"} value=\"Gradual Highlight\" onChange={(e)=>{setType(e.target.value);setPropertyName(\"color\");setPropertyValue(\"yellow\"); setPropertyType(\"str\")}}/>\r\n                <label>Gradual Highlight</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Increased Font\"} value=\"Increased Font\" onChange={(e)=>{setType(e.target.value);setPropertyName(\"font\"); setPropertyValue(\"18\"); setPropertyType(\"int\") }}/>\r\n                <label>Increased Font</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Gradual Font\"} value=\"Gradual Font\" onChange={(e)=>{setType(e.target.value); setPropertyName(\"font\"); setPropertyValue(\"18\"); setPropertyType(\"int\") }}/>\r\n                <label>Gradual Font</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Summary Only\"} value=\"Summary Only\" onChange={(e)=>{setType(e.target.value); setPropertyName(\"none\") ;setPropertyValue(\"none\"); setPropertyType(\"none\") }}/>\r\n                <label>Summary Only</label>\r\n              </div>\r\n              </Col >\r\n              <Col >\r\n              {text1 && text1.data ? <TextVisualization sentences={text1.data.sentences} type={type} showBar={true}/*type={type}*/ name={text1.data.name}/> : null}\r\n              </Col>\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button  onClick={(e)=>{onButtonClick() }} href={''}>Save</Button>\r\n          <Button onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}",["304","305"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\StudentSummary.js",["306","307","308","309"],"import React, { useState} from \"react\";\r\nimport {Container, Form} from 'react-bootstrap'\r\n\r\n\r\n\r\n\r\nexport function StudentSummary(props){\r\n\r\n    const text_id = props.text_id;\r\n    const text = props.text;\r\n    const text_type = props.type;\r\n    const student_id = props.student_id;\r\n\r\n    // this.state = {value: ''};\r\n    // this.handleChange = this.handleChange.bind(this);\r\n    const [textValue,setTextValue] = useState(\"\");\r\n\r\n    const set_student_summary = () => {\r\n        // Send this to DB\r\n        console.log(textValue);\r\n        // console.log(text_id);\r\n        // console.log(text);\r\n        // console.log(text_type);\r\n        // console.log(student_id);\r\n    }\r\n\r\n    function handleChange(event) {\r\n        setTextValue(event.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <Container style={{textAlign: 'center'}}>\r\n            <h1>Summary</h1>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <Form>\r\n                <Form.Group controlId=\"ControlTextarea\">\r\n                    <Form.Label>Now you will need to summarize the text you have read, Please write the summary in english.</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={10} value={textValue} onChange={handleChange} />\r\n                </Form.Group>\r\n            </Form>\r\n            <br/>\r\n            <button variant=\"outline-success\" onClick={() => {set_student_summary(); props.moveToQuestions();}}>Submit</button>\r\n        </Container>\r\n\r\n    )\r\n}","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\TextVisualization.js",[],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\GradualFontVisualization.js",[],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\GenerateRandomTextAndChooseVisualization.js",["310","311","312","313","314","315"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\StudentExplanationPage.js",["316","317","318"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\DeleteTextPage.js",["319","320","321","322"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\RandomVisualizationDispalyModal.js",["323","324","325","326","327","328","329"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\LoginCard.js",["330"],"import React from 'react'\r\nimport { Button, Card, Col, Form, FormControl, InputGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport function LoginCard(props){\r\n\r\n    \r\n    return (\r\n        <Card style={{ width: '18rem' }}>\r\n        <Card.Body>\r\n            <Card.Title className=\"text-center\">Login</Card.Title>\r\n            <Form>\r\n                <Form.Row>\r\n                    <Col xs=\"auto\">\r\n                        <InputGroup className=\"mb-2\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>@</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl name=\"username\" onChange={props.handleInputChange} id=\"inlineFormInputGroup\" placeholder=\"Username\" />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Col xs=\"auto\">\r\n                        <InputGroup className=\"mb-2\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>@</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl name=\"password\" onChange={props.handleInputChange} type=\"password\" id=\"inlineFormInputGroup\" placeholder=\"Password\" />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n            <Button className=\"mb-2\" onClick={props.handleLogin} variant=\"primary\" block>Login</Button>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n    \r\n\r\n}","C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\StudentEntrance.js",[],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\model\\requests\\UserModelRestAPI.js",["331","332","333"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\model\\requests\\TestModelRestAPI.js",["334","335","336","337","338","339"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\TextDisplayModel.js",["340","341","342","343","344","345"],"import React, {useState} from 'react'\r\nimport {Button, Container, Modal, Row, Col} from 'react-bootstrap';\r\nimport {TextVisualization} from \"./TextVisualization\";\r\nimport * as textRepository from \"../repositories/TextRepository\";\r\nimport \"./Modal.css\"\r\n\r\n\r\n//style={{position: \"absolute\" , left: \"10px\"}}\r\nexport function TextDisplayModal(props) {\r\n    const id = props.text\r\n\r\n    const text1 = textRepository.useGetTextWeights(id)\r\n    const [type, setType] = useState(\"Without Visualization\");\r\n\r\n    const [propertyName, setPropertyName] = useState(\"none\");\r\n    const [propertyValue, setPropertyValue] = useState(\"none\");\r\n    const [propertyType, setPropertyType] = useState(\"none\");\r\n\r\n    let onButtonClick = function(event){\r\n        textRepository.save(type,id,propertyName,propertyValue,propertyType)\r\n        props.onHide()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            aria-labelledby=\"example-custom-modal-styling-title\"\r\n            size=\"xl\"\r\n            dialogClassName=\"my-modal\"\r\n\r\n        >\r\n            <Modal.Header closeButton>\r\n\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Container>\r\n                    <Col >\r\n                        {text1 && text1.data ? <TextVisualization sentences={text1.data.sentences} type={type} /*type={type}*/ name={text1.data.name} showBar={true}/> : null}\r\n                    </Col>\r\n                </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}",["346","347"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\HomePage.js",[],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\TheLastPage.js",["348"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\DeleteTestModal.js",["349","350","351","352"],"C:\\Users\\roman\\GitHub\\visual-summary\\client\\src\\components\\pages\\BeforeRankingPage.js",["353","354","355"],{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","replacedBy":"359"},{"ruleId":"356","replacedBy":"360"},{"ruleId":"358","replacedBy":"361"},{"ruleId":"362","severity":1,"message":"363","line":2,"column":10,"nodeType":"364","messageId":"365","endLine":2,"endColumn":16},{"ruleId":"362","severity":1,"message":"366","line":2,"column":31,"nodeType":"364","messageId":"365","endLine":2,"endColumn":42},{"ruleId":"362","severity":1,"message":"367","line":13,"column":12,"nodeType":"364","messageId":"365","endLine":13,"endColumn":17},{"ruleId":"362","severity":1,"message":"368","line":13,"column":19,"nodeType":"364","messageId":"365","endLine":13,"endColumn":27},{"ruleId":"362","severity":1,"message":"369","line":14,"column":12,"nodeType":"364","messageId":"365","endLine":14,"endColumn":20},{"ruleId":"362","severity":1,"message":"370","line":14,"column":22,"nodeType":"364","messageId":"365","endLine":14,"endColumn":33},{"ruleId":"356","replacedBy":"371"},{"ruleId":"358","replacedBy":"372"},{"ruleId":"356","replacedBy":"373"},{"ruleId":"358","replacedBy":"374"},{"ruleId":"362","severity":1,"message":"375","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"363","line":2,"column":10,"nodeType":"364","messageId":"365","endLine":2,"endColumn":16},{"ruleId":"362","severity":1,"message":"376","line":2,"column":18,"nodeType":"364","messageId":"365","endLine":2,"endColumn":21},{"ruleId":"362","severity":1,"message":"377","line":2,"column":34,"nodeType":"364","messageId":"365","endLine":2,"endColumn":37},{"ruleId":"362","severity":1,"message":"378","line":4,"column":9,"nodeType":"364","messageId":"365","endLine":4,"endColumn":16},{"ruleId":"362","severity":1,"message":"379","line":6,"column":9,"nodeType":"364","messageId":"365","endLine":6,"endColumn":16},{"ruleId":"380","severity":1,"message":"381","line":16,"column":25,"nodeType":"382","messageId":"383","endLine":16,"endColumn":27},{"ruleId":"362","severity":1,"message":"375","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"384","line":2,"column":9,"nodeType":"364","messageId":"365","endLine":2,"endColumn":13},{"ruleId":"362","severity":1,"message":"385","line":11,"column":9,"nodeType":"364","messageId":"365","endLine":11,"endColumn":13},{"ruleId":"362","severity":1,"message":"386","line":14,"column":11,"nodeType":"364","messageId":"365","endLine":14,"endColumn":19},{"ruleId":"362","severity":1,"message":"387","line":17,"column":11,"nodeType":"364","messageId":"365","endLine":17,"endColumn":15},{"ruleId":"356","replacedBy":"388"},{"ruleId":"358","replacedBy":"389"},{"ruleId":"362","severity":1,"message":"375","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"390","line":2,"column":9,"nodeType":"364","messageId":"365","endLine":2,"endColumn":18},{"ruleId":"362","severity":1,"message":"391","line":5,"column":9,"nodeType":"364","messageId":"365","endLine":5,"endColumn":34},{"ruleId":"362","severity":1,"message":"387","line":17,"column":11,"nodeType":"364","messageId":"365","endLine":17,"endColumn":15},{"ruleId":"362","severity":1,"message":"369","line":18,"column":12,"nodeType":"364","messageId":"365","endLine":18,"endColumn":20},{"ruleId":"362","severity":1,"message":"370","line":18,"column":22,"nodeType":"364","messageId":"365","endLine":18,"endColumn":33},{"ruleId":"392","severity":1,"message":"393","line":21,"column":7,"nodeType":"394","endLine":21,"endColumn":9,"suggestions":"395"},{"ruleId":"356","replacedBy":"396"},{"ruleId":"358","replacedBy":"397"},{"ruleId":"362","severity":1,"message":"375","line":1,"column":16,"nodeType":"364","messageId":"365","endLine":1,"endColumn":25},{"ruleId":"362","severity":1,"message":"376","line":2,"column":17,"nodeType":"364","messageId":"365","endLine":2,"endColumn":20},{"ruleId":"362","severity":1,"message":"377","line":2,"column":46,"nodeType":"364","messageId":"365","endLine":2,"endColumn":49},{"ruleId":"362","severity":1,"message":"398","line":3,"column":8,"nodeType":"364","messageId":"365","endLine":3,"endColumn":13},{"ruleId":"362","severity":1,"message":"399","line":6,"column":22,"nodeType":"364","messageId":"365","endLine":6,"endColumn":32},{"ruleId":"362","severity":1,"message":"400","line":15,"column":12,"nodeType":"364","messageId":"365","endLine":15,"endColumn":20},{"ruleId":"362","severity":1,"message":"401","line":15,"column":21,"nodeType":"364","messageId":"365","endLine":15,"endColumn":32},{"ruleId":"362","severity":1,"message":"402","line":1,"column":8,"nodeType":"364","messageId":"365","endLine":1,"endColumn":13},{"ruleId":"362","severity":1,"message":"403","line":3,"column":13,"nodeType":"364","messageId":"365","endLine":3,"endColumn":29},{"ruleId":"392","severity":1,"message":"404","line":37,"column":7,"nodeType":"394","endLine":37,"endColumn":40,"suggestions":"405"},{"ruleId":"362","severity":1,"message":"402","line":1,"column":8,"nodeType":"364","messageId":"365","endLine":1,"endColumn":13},{"ruleId":"392","severity":1,"message":"406","line":31,"column":7,"nodeType":"394","endLine":31,"endColumn":12,"suggestions":"407"},{"ruleId":"408","severity":1,"message":"409","line":64,"column":36,"nodeType":"382","messageId":"410","endLine":64,"endColumn":37},{"ruleId":"408","severity":1,"message":"409","line":64,"column":57,"nodeType":"382","messageId":"410","endLine":64,"endColumn":58},{"ruleId":"392","severity":1,"message":"411","line":22,"column":7,"nodeType":"394","endLine":22,"endColumn":9,"suggestions":"412"},{"ruleId":"362","severity":1,"message":"413","line":98,"column":9,"nodeType":"364","messageId":"365","endLine":98,"endColumn":23},{"ruleId":"362","severity":1,"message":"414","line":2,"column":8,"nodeType":"364","messageId":"365","endLine":2,"endColumn":12},{"ruleId":"362","severity":1,"message":"415","line":8,"column":7,"nodeType":"364","messageId":"365","endLine":8,"endColumn":23},{"ruleId":"362","severity":1,"message":"416","line":9,"column":7,"nodeType":"364","messageId":"365","endLine":9,"endColumn":30},{"ruleId":"362","severity":1,"message":"375","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"417","line":1,"column":28,"nodeType":"364","messageId":"365","endLine":1,"endColumn":36},{"ruleId":"362","severity":1,"message":"363","line":2,"column":10,"nodeType":"364","messageId":"365","endLine":2,"endColumn":16},{"ruleId":"362","severity":1,"message":"376","line":2,"column":18,"nodeType":"364","messageId":"365","endLine":2,"endColumn":21},{"ruleId":"362","severity":1,"message":"418","line":2,"column":23,"nodeType":"364","messageId":"365","endLine":2,"endColumn":32},{"ruleId":"362","severity":1,"message":"377","line":2,"column":34,"nodeType":"364","messageId":"365","endLine":2,"endColumn":37},{"ruleId":"362","severity":1,"message":"419","line":5,"column":13,"nodeType":"364","messageId":"365","endLine":5,"endColumn":27},{"ruleId":"362","severity":1,"message":"391","line":6,"column":10,"nodeType":"364","messageId":"365","endLine":6,"endColumn":35},{"ruleId":"362","severity":1,"message":"420","line":15,"column":12,"nodeType":"364","messageId":"365","endLine":15,"endColumn":16},{"ruleId":"362","severity":1,"message":"421","line":20,"column":13,"nodeType":"364","messageId":"365","endLine":20,"endColumn":15},{"ruleId":"362","severity":1,"message":"422","line":4,"column":27,"nodeType":"364","messageId":"365","endLine":4,"endColumn":33},{"ruleId":"362","severity":1,"message":"423","line":7,"column":10,"nodeType":"364","messageId":"365","endLine":7,"endColumn":17},{"ruleId":"356","replacedBy":"424"},{"ruleId":"358","replacedBy":"425"},{"ruleId":"380","severity":1,"message":"381","line":11,"column":28,"nodeType":"382","messageId":"383","endLine":11,"endColumn":30},{"ruleId":"362","severity":1,"message":"363","line":1,"column":9,"nodeType":"364","messageId":"365","endLine":1,"endColumn":15},{"ruleId":"362","severity":1,"message":"426","line":2,"column":27,"nodeType":"364","messageId":"365","endLine":2,"endColumn":33},{"ruleId":"362","severity":1,"message":"427","line":7,"column":5,"nodeType":"364","messageId":"365","endLine":7,"endColumn":24},{"ruleId":"362","severity":1,"message":"428","line":7,"column":26,"nodeType":"364","messageId":"365","endLine":7,"endColumn":50},{"ruleId":"362","severity":1,"message":"403","line":9,"column":13,"nodeType":"364","messageId":"365","endLine":9,"endColumn":29},{"ruleId":"362","severity":1,"message":"429","line":19,"column":11,"nodeType":"364","messageId":"365","endLine":19,"endColumn":26},{"ruleId":"362","severity":1,"message":"430","line":20,"column":11,"nodeType":"364","messageId":"365","endLine":20,"endColumn":27},{"ruleId":"392","severity":1,"message":"431","line":40,"column":7,"nodeType":"394","endLine":40,"endColumn":9,"suggestions":"432"},{"ruleId":"362","severity":1,"message":"433","line":71,"column":9,"nodeType":"364","messageId":"365","endLine":71,"endColumn":22},{"ruleId":"362","severity":1,"message":"402","line":1,"column":8,"nodeType":"364","messageId":"365","endLine":1,"endColumn":13},{"ruleId":"362","severity":1,"message":"375","line":1,"column":16,"nodeType":"364","messageId":"365","endLine":1,"endColumn":25},{"ruleId":"362","severity":1,"message":"398","line":4,"column":8,"nodeType":"364","messageId":"365","endLine":4,"endColumn":13},{"ruleId":"362","severity":1,"message":"434","line":5,"column":25,"nodeType":"364","messageId":"365","endLine":5,"endColumn":35},{"ruleId":"362","severity":1,"message":"390","line":8,"column":9,"nodeType":"364","messageId":"365","endLine":8,"endColumn":18},{"ruleId":"362","severity":1,"message":"435","line":15,"column":12,"nodeType":"364","messageId":"365","endLine":15,"endColumn":20},{"ruleId":"362","severity":1,"message":"436","line":33,"column":11,"nodeType":"364","messageId":"365","endLine":33,"endColumn":22},{"ruleId":"380","severity":1,"message":"381","line":34,"column":58,"nodeType":"382","messageId":"383","endLine":34,"endColumn":60},{"ruleId":"356","replacedBy":"437"},{"ruleId":"358","replacedBy":"438"},{"ruleId":"362","severity":1,"message":"418","line":2,"column":23,"nodeType":"364","messageId":"365","endLine":2,"endColumn":32},{"ruleId":"380","severity":1,"message":"381","line":20,"column":16,"nodeType":"382","messageId":"383","endLine":20,"endColumn":18},{"ruleId":"380","severity":1,"message":"381","line":22,"column":22,"nodeType":"382","messageId":"383","endLine":22,"endColumn":24},{"ruleId":"362","severity":1,"message":"439","line":2,"column":33,"nodeType":"364","messageId":"365","endLine":2,"endColumn":38},{"ruleId":"362","severity":1,"message":"398","line":4,"column":8,"nodeType":"364","messageId":"365","endLine":4,"endColumn":13},{"ruleId":"362","severity":1,"message":"434","line":5,"column":9,"nodeType":"364","messageId":"365","endLine":5,"endColumn":19},{"ruleId":"362","severity":1,"message":"440","line":12,"column":11,"nodeType":"364","messageId":"365","endLine":12,"endColumn":15},{"ruleId":"362","severity":1,"message":"441","line":12,"column":17,"nodeType":"364","messageId":"365","endLine":12,"endColumn":24},{"ruleId":"362","severity":1,"message":"435","line":13,"column":12,"nodeType":"364","messageId":"365","endLine":13,"endColumn":20},{"ruleId":"362","severity":1,"message":"442","line":16,"column":12,"nodeType":"364","messageId":"365","endLine":16,"endColumn":21},{"ruleId":"362","severity":1,"message":"443","line":19,"column":11,"nodeType":"364","messageId":"365","endLine":19,"endColumn":22},{"ruleId":"362","severity":1,"message":"377","line":2,"column":35,"nodeType":"364","messageId":"365","endLine":2,"endColumn":38},{"ruleId":"356","replacedBy":"444"},{"ruleId":"358","replacedBy":"445"},{"ruleId":"362","severity":1,"message":"446","line":9,"column":11,"nodeType":"364","messageId":"365","endLine":9,"endColumn":18},{"ruleId":"362","severity":1,"message":"447","line":10,"column":11,"nodeType":"364","messageId":"365","endLine":10,"endColumn":15},{"ruleId":"362","severity":1,"message":"448","line":11,"column":11,"nodeType":"364","messageId":"365","endLine":11,"endColumn":20},{"ruleId":"362","severity":1,"message":"449","line":12,"column":11,"nodeType":"364","messageId":"365","endLine":12,"endColumn":21},{"ruleId":"362","severity":1,"message":"375","line":1,"column":17,"nodeType":"364","messageId":"365","endLine":1,"endColumn":26},{"ruleId":"362","severity":1,"message":"378","line":6,"column":9,"nodeType":"364","messageId":"365","endLine":6,"endColumn":16},{"ruleId":"362","severity":1,"message":"386","line":15,"column":11,"nodeType":"364","messageId":"365","endLine":15,"endColumn":19},{"ruleId":"362","severity":1,"message":"387","line":18,"column":11,"nodeType":"364","messageId":"365","endLine":18,"endColumn":15},{"ruleId":"362","severity":1,"message":"369","line":19,"column":12,"nodeType":"364","messageId":"365","endLine":19,"endColumn":20},{"ruleId":"362","severity":1,"message":"370","line":19,"column":22,"nodeType":"364","messageId":"365","endLine":19,"endColumn":33},{"ruleId":"362","severity":1,"message":"450","line":3,"column":9,"nodeType":"364","messageId":"365","endLine":3,"endColumn":25},{"ruleId":"362","severity":1,"message":"451","line":6,"column":10,"nodeType":"364","messageId":"365","endLine":6,"endColumn":21},{"ruleId":"380","severity":1,"message":"452","line":33,"column":22,"nodeType":"382","messageId":"383","endLine":33,"endColumn":24},{"ruleId":"362","severity":1,"message":"398","line":4,"column":8,"nodeType":"364","messageId":"365","endLine":4,"endColumn":13},{"ruleId":"362","severity":1,"message":"435","line":12,"column":12,"nodeType":"364","messageId":"365","endLine":12,"endColumn":20},{"ruleId":"362","severity":1,"message":"453","line":13,"column":11,"nodeType":"364","messageId":"365","endLine":13,"endColumn":18},{"ruleId":"362","severity":1,"message":"454","line":13,"column":20,"nodeType":"364","messageId":"365","endLine":13,"endColumn":30},{"ruleId":"362","severity":1,"message":"455","line":14,"column":12,"nodeType":"364","messageId":"365","endLine":14,"endColumn":24},{"ruleId":"362","severity":1,"message":"456","line":14,"column":26,"nodeType":"364","messageId":"365","endLine":14,"endColumn":41},{"ruleId":"362","severity":1,"message":"457","line":15,"column":12,"nodeType":"364","messageId":"365","endLine":15,"endColumn":25},{"ruleId":"362","severity":1,"message":"458","line":15,"column":27,"nodeType":"364","messageId":"365","endLine":15,"endColumn":43},{"ruleId":"362","severity":1,"message":"459","line":16,"column":12,"nodeType":"364","messageId":"365","endLine":16,"endColumn":24},{"ruleId":"362","severity":1,"message":"460","line":16,"column":26,"nodeType":"364","messageId":"365","endLine":16,"endColumn":41},{"ruleId":"362","severity":1,"message":"461","line":20,"column":9,"nodeType":"364","messageId":"365","endLine":20,"endColumn":22},{"ruleId":"362","severity":1,"message":"384","line":3,"column":10,"nodeType":"364","messageId":"365","endLine":3,"endColumn":14},{"ruleId":"362","severity":1,"message":"402","line":1,"column":8,"nodeType":"364","messageId":"365","endLine":1,"endColumn":13},{"ruleId":"362","severity":1,"message":"375","line":1,"column":16,"nodeType":"364","messageId":"365","endLine":1,"endColumn":25},{"ruleId":"362","severity":1,"message":"417","line":1,"column":27,"nodeType":"364","messageId":"365","endLine":1,"endColumn":35},{"ruleId":"362","severity":1,"message":"402","line":1,"column":8,"nodeType":"364","messageId":"365","endLine":1,"endColumn":13},{"ruleId":"392","severity":1,"message":"406","line":31,"column":7,"nodeType":"394","endLine":31,"endColumn":12,"suggestions":"462"},{"ruleId":"408","severity":1,"message":"409","line":50,"column":35,"nodeType":"382","messageId":"410","endLine":50,"endColumn":36},{"ruleId":"408","severity":1,"message":"409","line":50,"column":56,"nodeType":"382","messageId":"410","endLine":50,"endColumn":57},{"ruleId":"408","severity":1,"message":"409","line":50,"column":73,"nodeType":"382","messageId":"410","endLine":50,"endColumn":74},{"ruleId":"408","severity":1,"message":"409","line":50,"column":92,"nodeType":"382","messageId":"410","endLine":50,"endColumn":93},{"ruleId":"362","severity":1,"message":"377","line":2,"column":35,"nodeType":"364","messageId":"365","endLine":2,"endColumn":38},{"ruleId":"362","severity":1,"message":"463","line":13,"column":18,"nodeType":"364","messageId":"365","endLine":13,"endColumn":25},{"ruleId":"362","severity":1,"message":"456","line":15,"column":26,"nodeType":"364","messageId":"365","endLine":15,"endColumn":41},{"ruleId":"362","severity":1,"message":"458","line":16,"column":27,"nodeType":"364","messageId":"365","endLine":16,"endColumn":43},{"ruleId":"362","severity":1,"message":"460","line":17,"column":26,"nodeType":"364","messageId":"365","endLine":17,"endColumn":41},{"ruleId":"362","severity":1,"message":"461","line":19,"column":9,"nodeType":"364","messageId":"365","endLine":19,"endColumn":22},{"ruleId":"356","replacedBy":"464"},{"ruleId":"358","replacedBy":"465"},{"ruleId":"362","severity":1,"message":"417","line":1,"column":16,"nodeType":"364","messageId":"365","endLine":1,"endColumn":24},{"ruleId":"362","severity":1,"message":"417","line":1,"column":16,"nodeType":"364","messageId":"365","endLine":1,"endColumn":24},{"ruleId":"362","severity":1,"message":"418","line":2,"column":17,"nodeType":"364","messageId":"365","endLine":2,"endColumn":26},{"ruleId":"362","severity":1,"message":"377","line":2,"column":35,"nodeType":"364","messageId":"365","endLine":2,"endColumn":38},{"ruleId":"362","severity":1,"message":"376","line":2,"column":40,"nodeType":"364","messageId":"365","endLine":2,"endColumn":43},{"ruleId":"362","severity":1,"message":"375","line":1,"column":16,"nodeType":"364","messageId":"365","endLine":1,"endColumn":25},{"ruleId":"362","severity":1,"message":"426","line":1,"column":27,"nodeType":"364","messageId":"365","endLine":1,"endColumn":33},{"ruleId":"362","severity":1,"message":"417","line":1,"column":35,"nodeType":"364","messageId":"365","endLine":1,"endColumn":43},"no-native-reassign",["466"],"no-negated-in-lhs",["467"],["466"],["467"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'click' is assigned a value but never used.","'setClick' is assigned a value but never used.","'dropdown' is assigned a value but never used.","'setDropdown' is assigned a value but never used.",["466"],["467"],["466"],["467"],"'useEffect' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'TestRow' is defined but never used.","'forEach' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","'type' is assigned a value but never used.","'textById' is assigned a value but never used.","'size' is assigned a value but never used.",["466"],["467"],"'useParams' is defined but never used.","'VisualizationDisplayModal' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'login' and 'logout'. Either include them or remove the dependency array.","ArrayExpression",["468"],["466"],["467"],"'axios' is defined but never used.","'addAnswers' is defined but never used.","'ques_num' is assigned a value but never used.","'setQues_num' is assigned a value but never used.","'React' is defined but never used.","'textModelRestAPI' is defined but never used.","React Hook useEffect has missing dependencies: 'restTest.error' and 'restTest.loading'. Either include them or remove the dependency array.",["469"],"React Hook useEffect has a missing dependency: 'headers'. Either include it or remove the dependency array.",["470"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has a missing dependency: 'textID'. Either include it or remove the dependency array.",["471"],"'clear_question' is assigned a value but never used.","'logo' is defined but never used.","'AuthenticatedApp' is assigned a value but never used.","'AuthenticatedManagerApp' is assigned a value but never used.","'useState' is defined but never used.","'Container' is defined but never used.","'textRepository' is defined but never used.","'user' is assigned a value but never used.","'id' is assigned a value but never used.","'Router' is defined but never used.","'useAuth' is defined but never used.",["466"],["467"],"'useRef' is defined but never used.","'get_type_by_text_id' is defined but never used.","'useGetTextWeightsStudent' is defined but never used.","'NUMBER_OF_TEXTS' is assigned a value but never used.","'TIME_FOR_READING' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'testID'. Either include it or remove the dependency array.",["472"],"'moveToRankBtn' is assigned a value but never used.","'deleteText' is defined but never used.","'register' is assigned a value but never used.","'getTextById' is assigned a value but never used.",["466"],["467"],"'Modal' is defined but never used.","'flag' is assigned a value but never used.","'setFlag' is assigned a value but never used.","'modalShow' is assigned a value but never used.","'handleClose' is assigned a value but never used.",["466"],["467"],"'text_id' is assigned a value but never used.","'text' is assigned a value but never used.","'text_type' is assigned a value but never used.","'student_id' is assigned a value but never used.","'set_student_info' is defined but never used.","'useAxiosGet' is defined but never used.","Expected '!==' and instead saw '!='.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'propertyName' is assigned a value but never used.","'setPropertyName' is assigned a value but never used.","'propertyValue' is assigned a value but never used.","'setPropertyValue' is assigned a value but never used.","'propertyType' is assigned a value but never used.","'setPropertyType' is assigned a value but never used.","'onButtonClick' is assigned a value but never used.",["473"],"'setType' is assigned a value but never used.",["466"],["467"],"no-global-assign","no-unsafe-negation",{"desc":"474","fix":"475"},{"desc":"476","fix":"477"},{"desc":"478","fix":"479"},{"desc":"480","fix":"481"},{"desc":"482","fix":"483"},{"desc":"478","fix":"484"},"Update the dependencies array to be: [login, logout]",{"range":"485","text":"486"},"Update the dependencies array to be: [restTest.data, restTest.error, restTest.loading]",{"range":"487","text":"488"},"Update the dependencies array to be: [headers, url]",{"range":"489","text":"490"},"Update the dependencies array to be: [textID]",{"range":"491","text":"492"},"Update the dependencies array to be: [testID]",{"range":"493","text":"494"},{"range":"495","text":"490"},[569,571],"[login, logout]",[935,968],"[restTest.data, restTest.error, restTest.loading]",[809,814],"[headers, url]",[818,820],"[textID]",[1555,1557],"[testID]",[805,810]]