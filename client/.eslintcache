[{"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\index.js":"1","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\reportWebVitals.js":"2","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\App.js":"3","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\context\\auth_context.js":"4","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\HomePage.js":"5","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\AuthenticatedApp.js":"6","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\UnAuthenticatedApp.js":"7","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\hooks\\authentication_provider.js":"8","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\DeveloperApp.js":"9","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\TextManagement.js":"10","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\TestManagement.js":"11","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\DeveloperNavbar.js":"12","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\requests\\UserModelRestAPI.js":"13","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\DeleteTextPage.js":"14","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\AddQuestion.js":"15","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\LoginPage.js":"16","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\requests\\TextModelRestAPI.js":"17","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\VisualizationDisplayModal.js":"18","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\repositories\\TextRepository.js":"19","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\TextDisplayModel.js":"20","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\LoginCard.js":"21","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\TextVisualization.js":"22","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\TextVisualizationFactory.js":"23","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\FontSizeVisualization.js":"24","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\SummaryOnlyVisualization.js":"25","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\HighlightVisualization.js":"26","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\WithOutVisualization.js":"27","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\GradualHighlightVisualization.js":"28","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\GradualFontVisualization.js":"29","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\CenteredModal.js":"30","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\DeleteQuestion.js":"31"},{"size":718,"mtime":1615209950327,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1615209950332,"results":"34","hashOfConfig":"33"},{"size":823,"mtime":1615226810279,"results":"35","hashOfConfig":"33"},{"size":1678,"mtime":1615226811974,"results":"36","hashOfConfig":"33"},{"size":586,"mtime":1615226811928,"results":"37","hashOfConfig":"33"},{"size":809,"mtime":1615388337356,"results":"38","hashOfConfig":"33"},{"size":766,"mtime":1615226811951,"results":"39","hashOfConfig":"33"},{"size":929,"mtime":1615226811976,"results":"40","hashOfConfig":"33"},{"size":1251,"mtime":1615920152049,"results":"41","hashOfConfig":"33"},{"size":3814,"mtime":1615921778710,"results":"42","hashOfConfig":"33"},{"size":2738,"mtime":1615388337360,"results":"43","hashOfConfig":"33"},{"size":1637,"mtime":1615920152030,"results":"44","hashOfConfig":"33"},{"size":480,"mtime":1615226811978,"results":"45","hashOfConfig":"33"},{"size":5274,"mtime":1615920472302,"results":"46","hashOfConfig":"33"},{"size":10217,"mtime":1615920152036,"results":"47","hashOfConfig":"33"},{"size":1125,"mtime":1615226811930,"results":"48","hashOfConfig":"33"},{"size":4199,"mtime":1615920152052,"results":"49","hashOfConfig":"33"},{"size":3707,"mtime":1615472945103,"results":"50","hashOfConfig":"33"},{"size":4008,"mtime":1615920152061,"results":"51","hashOfConfig":"33"},{"size":1589,"mtime":1615736062694,"results":"52","hashOfConfig":"33"},{"size":1626,"mtime":1615226810856,"results":"53","hashOfConfig":"33"},{"size":428,"mtime":1615226811335,"results":"54","hashOfConfig":"33"},{"size":1375,"mtime":1615226811894,"results":"55","hashOfConfig":"33"},{"size":575,"mtime":1615226810282,"results":"56","hashOfConfig":"33"},{"size":517,"mtime":1615226811334,"results":"57","hashOfConfig":"33"},{"size":593,"mtime":1615226810854,"results":"58","hashOfConfig":"33"},{"size":236,"mtime":1615226811993,"results":"59","hashOfConfig":"33"},{"size":311,"mtime":1615226811997,"results":"60","hashOfConfig":"33"},{"size":302,"mtime":1615226810851,"results":"61","hashOfConfig":"33"},{"size":721,"mtime":1615909671034,"results":"62","hashOfConfig":"33"},{"size":5581,"mtime":1615920152043,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"rjozy9",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\index.js",[],["143","144"],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\reportWebVitals.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\App.js",["145","146","147"],"import React from 'react'\r\nimport logo from './logo.svg';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { useAuth } from './model/context/auth_context'\r\nimport { HomePage } from './components/pages/HomePage';\r\nconst DeveloperApp = React.lazy(() => import('./components/pages/DeveloperApp'))\r\nconst AuthenticatedApp = React.lazy(() => import('./components/pages/AuthenticatedApp'))\r\nconst AuthenticatedManagerApp = React.lazy(() => import('./components/pages/AuthenticatedApp'))\r\nconst UnauthenticatedApp = React.lazy(() => import('./components/pages/UnAuthenticatedApp'))\r\n\r\nfunction App() {\r\n\r\n  const {user} = useAuth()\r\n  return (\r\n    <React.Suspense fallback={<HomePage />}>\r\n       {user ? <DeveloperApp /> : <UnauthenticatedApp />}\r\n    </React.Suspense>\r\n  )\r\n}\r\n\r\nexport default App;","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\context\\auth_context.js",["148"],"import React, { useEffect, useState } from 'react'\r\nimport  * as provider from \"../hooks/authentication_provider\"\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst AuthContext = React.createContext()\r\nAuthContext.displayName = 'AuthContext'\r\n\r\nexport function AuthProvider({children}){\r\n    \r\n    const history = useHistory()\r\n\r\n    useEffect(() =>{\r\n        provider.load_user_details().then(function (user){\r\n            setValue({\r\n                user: user,\r\n                login: login,\r\n                logout: logout\r\n            })\r\n        })\r\n    },[])\r\n\r\n    const login = (user_data) => {\r\n        provider.userLogin(user_data).then(function (user){\r\n            setValue({\r\n                user: user,\r\n                login: login,\r\n                logout: logout\r\n            })\r\n            history.push('/')\r\n        })\r\n        .catch(function(err){\r\n            setValue({\r\n                user: null,\r\n                login: login,\r\n                logout: logout\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    const logout = () => {\r\n        provider.userLogout()\r\n        setValue({\r\n            user: null,\r\n            login: login,\r\n            logout: logout\r\n        })\r\n    }\r\n\r\n    const [value, setValue] = useState({\r\n        user: null,\r\n        login: login,\r\n        logout: logout\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport function useAuth() {\r\n    const context = React.useContext(AuthContext)\r\n    if (context === undefined) {\r\n      throw new Error(`useAuth must be used within a AuthProvider`)\r\n    }\r\n    return context\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\HomePage.js",["149"],"import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport './HomePage.css'\r\n\r\n\r\nexport function HomePage(){\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row className=\"mt-5 justify-content-center align-items-center\">\r\n                    <h1 className=\"block\">Welcome</h1>\r\n                </Row>\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                    <h2>Visualization Summary Platform</h2>\r\n                </Row>\r\n            </Container>\r\n            \r\n        </>\r\n    )\r\n\r\n\r\n\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\AuthenticatedApp.js",["150","151","152","153"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { HomePage } from './HomePage';\r\nimport TestManagement from './TestManagement.js';\r\nimport TextManagement from './TextManagement.js';\r\n\r\nimport { useAuth } from '../../model/context/auth_context';\r\nimport DeveloperNavbar from \"../DeveloperNavbar\";\r\n\r\nfunction AuthenticatedApp() {\r\n\r\n    const {user, logout} = useAuth()\r\n    return (\r\n        <>\r\n            <DeveloperNavbar/>\r\n            <Switch>\r\n                <Route path='/' exact component={HomePage} />\r\n                <Route path='/create-test' component={TestManagement} />\r\n\r\n\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthenticatedApp;\r\n","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\UnAuthenticatedApp.js",["154"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { HomePage } from './HomePage';\r\nimport { LoginPage } from './LoginPage';\r\nimport { useAuth } from '../../model/context/auth_context';\r\nimport DeveloperNavbar from \"../DeveloperNavbar\";\r\n\r\nfunction UnAuthenticatedApp() {\r\n\r\n    const {login} = useAuth()\r\n    return (\r\n        <>\r\n        <Router>\r\n            <DeveloperNavbar/>\r\n            <Switch>\r\n                <Route path='/' exact component={HomePage} />\r\n                <Route path='/login' component={LoginPage} />\r\n            </Switch>\r\n        </Router>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default UnAuthenticatedApp;\r\n","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\hooks\\authentication_provider.js",["155","156"],"import React, { useState } from 'react'\r\nimport { login, get_user_details } from '../requests/UserModelRestAPI'\r\nimport Cookies from \"js-cookie\"\r\n\r\n\r\nexport function userLogin (user_data) {\r\n    let response = login(user_data)\r\n    return response.then(function (response){\r\n        Cookies.set(\"x-auth-token\", response.data.token,{ expires: 1 });\r\n        return Promise.resolve(response.data.user)\r\n    })\r\n    .catch(function(err){\r\n        return Promise.reject(err);\r\n    })\r\n}\r\n\r\n\r\nexport function userLogout () {\r\n    Cookies.remove(\"x-auth-token\")\r\n}\r\n\r\nexport function load_user_details () {\r\n    let response = get_user_details()\r\n    return response.then(function (response){\r\n        return Promise.resolve(response.data)\r\n    })\r\n    .catch(function(err){\r\n        return Promise.reject(err);\r\n    })\r\n}\r\n\r\nexport function getToken (){\r\n    return Cookies.get(\"x-auth-token\") ? Cookies.get(\"x-auth-token\") : null;\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\DeveloperApp.js",["157","158"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { HomePage } from './HomePage';\r\nimport TestManagement from './TestManagement';\r\nimport { useAuth } from '../../model/context/auth_context';\r\nimport DeveloperNavbar from '../DeveloperNavbar';\r\nimport TextManagement from \"./TextManagement\";\r\nimport DeleteText from \"./DeleteTextPage\"\r\nimport AddQuestion from \"./AddQuestion\";\r\n\r\nfunction AuthenticatedApp() {\r\n\r\n    return (\r\n        <>\r\n            <DeveloperNavbar/>\r\n            <Switch>\r\n                <Route path='/' exact component={HomePage} />\r\n                <Route path='/create-test' component={TestManagement} />\r\n                <Route path='/add-text' component={TextManagement} />\r\n                <Route path='/delete-text' component={DeleteText} />\r\n                {<Route path='/add-question' component={AddQuestion} />}\r\n                {/*<Route path='/texts/:id' component={} />*/}\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthenticatedApp;\r\n","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\TextManagement.js",["159","160","161","162","163","164"],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\TestManagement.js",["165","166","167","168","169","170"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Container, Row } from 'react-bootstrap';\r\nimport {Link, useParams} from 'react-router-dom';\r\nimport { useAuth } from '../../model/context/auth_context';\r\nimport * as textRepository from \"../../repositories/TextRepository\";\r\nimport { VisualizationDisplayModal } from '../VisualizationDisplayModal';\r\n\r\n\r\n\r\n\r\nexport default function TestManagement() {\r\n    \r\n    const {user} = useAuth()\r\n\r\n    const setModal = useParams()\r\n\r\n\r\n    const { id } = useParams()\r\n    const textById = textRepository.useGetTextById(id)\r\n    const [modalShow,setModalShow] = useState([false,false,false,false,false,false,false,false,false,false])\r\n\r\n    const size = 10\r\n    const [dropdown, setDropdown] = useState([0,0,0,0,0,0,0,0,0,0]);\r\n\r\n\r\n    const texts = textRepository.useGetAllText()\r\n\r\n\r\n    return (\r\n    <>\r\n        <Container>\r\n        <h2 className=\"mb-3 text-left\">Test</h2>\r\n            <Row className=\"justify-content-center\">\r\n                <Col></Col>\r\n                <Col xs=\"9\">\r\n                    <div>\r\n                    {\r\n                        dropdown.map((value, index) => {\r\n                            return (\r\n                                <>\r\n                                <select value={dropdown[index]} onChange={(e)=>{\r\n                                    let arr=[...dropdown]\r\n                                    arr[index] = parseInt(e.target.value)\r\n                                    setDropdown(arr)\r\n                                }}>\r\n                                {texts && texts.data ? texts.data.map(text => (\r\n                                    <option value={text.id}>{text.name}</option>\r\n                                    )) : null}\r\n                                </select>\r\n                                    {'    '}<Button onClick={(e)=>{\r\n                                    let arr=[...modalShow]\r\n                                    arr[index] = true\r\n                                    setModalShow(arr)\r\n                                }}>Choose Visualization</Button><br/><br/>\r\n                                <VisualizationDisplayModal show={modalShow[index]} onHide={() => {\r\n                                    let arr=[...modalShow]\r\n                                    arr[index] = false\r\n                                    setModalShow(arr)\r\n                                }} text={dropdown[index]}></VisualizationDisplayModal>\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                    </div>\r\n\r\n\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n            </Container>\r\n    </>);\r\n}\r\n","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\DeveloperNavbar.js",["171","172","173","174","175","176"],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\requests\\UserModelRestAPI.js",["177","178","179"],"import React ,{useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { getToken } from '../hooks/authentication_provider'\r\n\r\nexport function login(props){\r\n    const url = 'http://127.0.0.1:5000/auth/login'\r\n    const body = props\r\n    return axios.post(url,body)\r\n}\r\n\r\n\r\nexport function get_user_details(){\r\n    const url = 'http://127.0.0.1:5000/private/user/get'\r\n    const headers = {headers: {\"x-auth-token\": getToken()}}\r\n    return axios.get(url, headers)\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\DeleteTextPage.js",["180","181","182","183"],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\AddQuestion.js",["184","185","186","187","188","189","190"],"import React, { useState } from 'react';\r\nimport {Button, Col, Container, Form, Row} from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport * as textRepository from \"../../repositories/TextRepository\";\r\nimport {TextDisplayModal} from \"../TextDisplayModel\";\r\nimport {addQuestion} from \"../../model/requests/TextModelRestAPI\";\r\n\r\n\r\nexport default function AddQuestion() {\r\n\r\n\r\n    const [dropdown, setDropdown] = useState([0]);\r\n    const texts = textRepository.useGetAllText()\r\n    const [modalShow,setModalShow] = useState([false])\r\n    const [arr,setArr] = useState([0])\r\n    const [ques_num,setQues_num] = useState([0])\r\n    const[que_content, setQue_content]= useState(\"\");\r\n\r\n    const[answer1, setAnswer1]= useState(\"\");\r\n    const[answer2, setAnswer2]= useState(\"\");\r\n    const[answer3, setAnswer3]= useState(\"\");\r\n    const[answer4, setAnswer4]= useState(\"\");\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n               <h2 className=\"mb-3 text-left\">Add Question:</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h4 className=\"mb-3 text-left\">Add Question for Text:</h4>\r\n                            <Form>\r\n                                <div>\r\n                                    {\r\n                                        dropdown.map((value, index) => {\r\n                                            return (\r\n                                                <>\r\n                                                    <select value={dropdown[index]} onChange={(e)=>{\r\n                                                        setArr([...dropdown])\r\n                                                        arr[index] = parseInt(e.target.value)\r\n                                                        setDropdown(arr)\r\n                                                    }}>\r\n                                                        {texts && texts.data ? texts.data.map(text => (\r\n                                                            <option value={text.id}>{text.name}</option>\r\n                                                        )) : null}\r\n                                                    </select> {'    '}<Button onClick={(e)=>{\r\n                                                    setArr([...dropdown])\r\n                                                    arr[index] = true\r\n                                                    setModalShow(arr)\r\n                                                }}>Show Text</Button><br/><br/>\r\n\r\n                                                    <TextDisplayModal show={modalShow[index]} onHide={() => {\r\n                                                        setArr([...dropdown])\r\n                                                        arr[index] = false\r\n                                                        setModalShow(arr)\r\n                                                    }} text={dropdown[index]}></TextDisplayModal>\r\n\r\n                                                    <Form.Group controlId=\"formBasicQuestion\">\r\n                                                            <Form.Label>Question:</Form.Label>\r\n                                                            <Form.Control type=\"question\" placeholder=\"Enter the Question here\" name= 'question' onChange={(e)=>{\r\n                                                                setQue_content(e.target.value);\r\n                                                            }} />\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group controlId=\"formBasicAnswer1\">\r\n                                                            <Form.Label>Answer 1:</Form.Label>\r\n                                                            <Form.Control type=\"answer1\" placeholder=\"Enter Answer 1 here\" onChange={(e)=>{\r\n                                                                setAnswer1(e.target.value);\r\n                                                            }} />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group controlId=\"formBasicAnswer2\">\r\n                                                            <Form.Label>Answer 2:</Form.Label>\r\n                                                            <Form.Control type=\"answer2\" placeholder=\"Enter Answer 2 here\" onChange={(e)=>{\r\n                                                                setAnswer2(e.target.value);\r\n                                                            }} />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group controlId=\"formBasicAnswer3\">\r\n                                                            <Form.Label>Answer 3:</Form.Label>\r\n                                                            <Form.Control type=\"answer3\" placeholder=\"Enter Answer 3 here\" onChange={(e)=>{\r\n                                                                setAnswer3(e.target.value);\r\n                                                            }} />\r\n                                                        </Form.Group>\r\n                                                        <Form.Group controlId=\"formBasicAnswer4\">\r\n                                                            <Form.Label>Answer 4:</Form.Label>\r\n                                                            <Form.Control type=\"answer4\" placeholder=\"Enter Answer 4 here\" onChange={(e)=>{\r\n                                                                setAnswer4(e.target.value);\r\n                                                            }} />\r\n                                                        </Form.Group>\r\n\r\n                                                    <h4 className=\"mb-3 text-left\">Check the Correct Answer:</h4>\r\n                                                    {['checkbox'].map((type) => (\r\n                                                                  <div key={`custom-inline-${type}`} className=\"mb-3\">\r\n                                                                      <Form.Check\r\n                                                                          custom\r\n                                                                          inline\r\n                                                                          label=\"Answer 1\"\r\n                                                                          type={type}\r\n                                                                          id={`custom-inline-${type}-1`}\r\n                                                                      />\r\n                                                                      <Form.Check\r\n                                                                          custom\r\n                                                                          inline\r\n                                                                          label=\"Answer 2\"\r\n                                                                          type={type}\r\n                                                                          id={`custom-inline-${type}-2`}\r\n                                                                      />\r\n                                                                      <Form.Check\r\n                                                                          custom\r\n                                                                          inline\r\n                                                                          label=\"Answer 3\"\r\n                                                                          type={type}\r\n                                                                          id={`custom-inline-${type}-3`}\r\n                                                                      />\r\n                                                                      <Form.Check\r\n                                                                          custom\r\n                                                                          inline\r\n                                                                          label=\"Answer 4\"\r\n                                                                          type={type}\r\n                                                                          id={`custom-inline-${type}-4`}\r\n                                                                      />\r\n                                                                  </div>\r\n                                                              ))}\r\n\r\n                                                    <Button onClick={(e)=>{\r\n                                                        addQuestion(setQues_num(ques_num + 1), dropdown[index], que_content)\r\n                                                        /*addAnswer()*/\r\n                                                    }}>Save</Button>\r\n                                                </>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </Form>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </>);\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\LoginPage.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\model\\requests\\TextModelRestAPI.js",["191","192","193","194"],"import React ,{useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { getToken } from '../hooks/authentication_provider'\r\n\r\nfunction useAxiosGet(url, headers){    \r\n    const [request, setRequest] = useState({\r\n        loading: false,\r\n        data: [],\r\n        error: false\r\n    })\r\n\r\n    useEffect(() => {\r\n        setRequest({\r\n            loading: true,\r\n            data: [],\r\n            error: false\r\n        })\r\n        axios.get(url, headers).then( response => {\r\n            setRequest({\r\n                loading: false,\r\n                data: response.data,\r\n                error: false\r\n            })\r\n        }).catch( () => {\r\n            setRequest({\r\n                loading: false,\r\n                data: [],\r\n                error: true\r\n            })\r\n        })\r\n    },[url])\r\n\r\n    return request\r\n}\r\n\r\nexport function useGetAllText(){\r\n    const url = 'http://127.0.0.1:5000/texts'\r\n    const headers = {headers: {\"x-auth-token\": getToken()}}\r\n    return useAxiosGet(url, headers)\r\n}\r\n\r\n export function saveVisualizationForText(type,textID,propertyName,propertyValue,propertyType){\r\n     const url = 'http://127.0.0.1:5000/saveVisu'\r\n     const body = \"{ \\\"testName\\\": \\\"test\\\", \\\"textID\\\":\" + textID + \", \\\"visualizationType\\\": \\\"\" + type + \"\\\", \\\"propName\\\": \\\"\" + propertyName + \"\\\", \\\"propVal\\\": \\\"\" + propertyValue + \"\\\" , \\\"propType\\\":\\\"\" + propertyType + \"\\\" }\"\r\n     const headers = {headers : {\"x-auth-token\": getToken()}}\r\n     return axios.post(url,body,headers)\r\n }\r\n\r\nexport function useGetTextById(id){\r\n    const url = `http://127.0.0.1:5000/texts/${id}`\r\n    const headers = {headers: {\"x-auth-token\": getToken()}}\r\n    return useAxiosGet(url, headers, false)\r\n}\r\n\r\nexport function useGetTextWeights(id){\r\n    const url = `http://127.0.0.1:5000/texts/${id}/weights`\r\n    const headers = {headers: {\"x-auth-token\": getToken()}}\r\n    return useAxiosGet(url, headers, false)\r\n}\r\n\r\nexport function createText(props){\r\n    const url = 'http://127.0.0.1:5000/texts'\r\n    const body = props\r\n    const headers = {headers : {\"x-auth-token\": getToken()}}\r\n    return axios.post(url,body,headers)\r\n}\r\n\r\nexport function uploadText(name, content){\r\n    const url = 'http://127.0.0.1:5000/uploadText'\r\n    const body = \"{  \\\"name\\\":\\\"\" + name + \"\\\", \\\"content\\\":\\\"\" + content + \"\\\" }\"\r\n    const headers = {headers : {\"x-auth-token\": getToken()}}\r\n    return axios.post(url,body,headers)\r\n}\r\n\r\nexport function deleteText(id){\r\n    const url = 'http://127.0.0.1:5000/deleteText'\r\n    const body = \"{ \\\"id\\\":\\\"\" + id + \"\\\" }\"\r\n    const headers = {headers : {\"x-auth-token\": getToken()}}\r\n    return axios.post(url,body,headers)\r\n}\r\n\r\nexport function addQuestion(que_id, text_id, content){\r\n    const url = 'http://127.0.0.1:5000/addQuestion'\r\n    const body = \"{ \\\"que_id\\\":\\\"\" + \"1\" + \"\\\", \\\"text_id\\\":\\\"\" + text_id + \"\\\", \\\"content\\\":\\\"\" + content + \"\\\" }\"\r\n    const headers = {headers : {\"x-auth-token\": getToken()}}\r\n    return axios.post(url,body,headers)\r\n}\r\n\r\nexport function addAnswer(option_id ,que_id, is_correct, answer_content){\r\n    const url = 'http://127.0.0.1:5000/addQuestion'\r\n    const body = \"{  \\\"option_id\\\":\\\"\" + option_id + \"\\\", \\\"que_id\\\":\\\"\" + que_id + \"\\\", \\\"is_correct\\\":\\\"\" + is_correct + \"\\\", \\\"answer_content\\\":\\\"\" + answer_content + \"\\\"  }\"\r\n    console.log(body)\r\n    const headers = {headers : {\"x-auth-token\": getToken()}}\r\n    return axios.post(url,body,headers)\r\n}\r\n// export function editText(props){\r\n//     const url = 'http://127.0.0.1:5000/texts'\r\n//     const body = props\r\n//     const headers = {headers : {\"x-auth-token\": getToken()}}\r\n//     return axios.put(url,body,headers)\r\n// }\r\n\r\n","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\VisualizationDisplayModal.js",["195"],"import React, {useState} from 'react'\r\nimport {Button, Container, Modal, Row, Col} from 'react-bootstrap';\r\nimport {TextVisualization} from \"./TextVisualization\";\r\nimport * as textRepository from \"../repositories/TextRepository\";\r\nimport \"./Modal.css\"\r\n\r\n\r\n//style={{position: \"absolute\" , left: \"10px\"}}\r\nexport function VisualizationDisplayModal(props) {\r\n  const id = props.text\r\n\r\n  const text1 = textRepository.useGetTextWeights(id)\r\n  const [type, setType] = useState(\"Without Visualization\");\r\n\r\n  const [propertyName, setPropertyName] = useState(\"none\");\r\n  const [propertyValue, setPropertyValue] = useState(\"none\");\r\n  const [propertyType, setPropertyType] = useState(\"none\");\r\n\r\n  let onButtonClick = function(event){\r\n    textRepository.save(type,id,propertyName,propertyValue,propertyType)\r\n    props.onHide()\r\n  }\r\n\r\n    return (\r\n      <Modal\r\n        {...props}\r\n        aria-labelledby=\"example-custom-modal-styling-title\"\r\n        size=\"xl\"\r\n        dialogClassName=\"my-modal\"\r\n\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">Visualization\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Container>\r\n            <Col >\r\n              <h3>Visualization : {type}</h3>\r\n\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Without Visualization\"} value=\"Without Visualization\" onChange={(e)=>{setType(e.target.value); setPropertyName(\"none\");setPropertyValue(\"none\"); setPropertyType(\"none\")}}/>\r\n                <label>Without Visualization</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Highlight\" } value=\"Highlight\"  onChange={(e)=>{setType(e.target.value); setPropertyName(\"color\"); setPropertyValue(\"yellow\"); setPropertyType(\"str\")}}/>\r\n                <label>Highlight</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Gradual Highlight\"} value=\"Gradual Highlight\" onChange={(e)=>{setType(e.target.value);setPropertyName(\"color\");setPropertyValue(\"yellow\"); setPropertyType(\"str\")}}/>\r\n                <label>Gradual Highlight</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Increased Font\"} value=\"Increased Font\" onChange={(e)=>{setType(e.target.value);setPropertyName(\"font\"); setPropertyValue(\"18\"); setPropertyType(\"int\") }}/>\r\n                <label>Increased Font</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Gradual Font\"} value=\"Gradual Font\" onChange={(e)=>{setType(e.target.value); setPropertyName(\"font\"); setPropertyValue(\"18\"); setPropertyType(\"int\") }}/>\r\n                <label>Gradual Font</label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input type=\"radio\" checked={type === \"Summary Only\"} value=\"Summary Only\" onChange={(e)=>{setType(e.target.value); setPropertyName(\"none\") ;setPropertyValue(\"none\"); setPropertyType(\"none\") }}/>\r\n                <label>Summary Only</label>\r\n              </div>\r\n              </Col >\r\n              <Col >\r\n              {text1 && text1.data ? <TextVisualization sentences={text1.data.sentences} type={type} /*type={type}*/ name={text1.data.name}/> : null}\r\n              </Col>\r\n          </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button  onClick={(e)=>{onButtonClick() }} href={''}>Save</Button>\r\n          <Button onClick={props.onHide}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\repositories\\TextRepository.js",["196","197","198","199"],"import React,{ useState , useEffect } from 'react';\r\nimport * as textModelRestAPI  from '../model/requests/TextModelRestAPI';\r\n\r\n\r\nexport function save(type,textID,propertyName,propertyValue,propertyType){\r\n    textModelRestAPI.saveVisualizationForText(type,textID,propertyName,propertyValue,propertyType)\r\n}\r\n\r\nexport function useGetAllText(){\r\n\r\n    const [text, setText] = useState({\r\n        loading: false,\r\n        data: [],\r\n        error: false\r\n    })\r\n\r\n    const restText = textModelRestAPI.useGetAllText()\r\n    //const fileText = textDummieModel.useGetAllText()\r\n\r\n    useEffect( () => {\r\n        setText({\r\n            loading: true,\r\n            data: [],\r\n            error: false\r\n        })\r\n        if(!restText.error && !restText.loading && restText.data != null){\r\n            setText({\r\n                loading: false,\r\n                data: restText.data,\r\n                error: false\r\n            })\r\n        }\r\n        // else if (!fileText.error && !fileText.loading && fileText.data != null){\r\n        //     setText({\r\n        //         loading: false,\r\n        //         data: fileText.data,\r\n        //         error: false\r\n        //     })\r\n        // }\r\n        else {\r\n            setText({\r\n                loading: false,\r\n                data: [],\r\n                error: true\r\n            })\r\n        }\r\n    },[/*fileText.data,*/restText.data])\r\n\r\n    return text\r\n}\r\n\r\nexport function useGetTextById(id){\r\n\r\n    const [text, setText] = useState({\r\n        loading: false,\r\n        data: [],\r\n        error: false\r\n    })\r\n\r\n    const restText = textModelRestAPI.useGetTextById()\r\n    // const fileMedia = textDummieModel.useGetTextById(id)\r\n\r\n    useEffect( () => {\r\n        setText({\r\n            loading: true,\r\n            data: [],\r\n            error: false\r\n        })\r\n        if(!restText.error && !restText.loading && restText.data != null){\r\n            setText({\r\n                loading: false,\r\n                data: restText.data,\r\n                error: false\r\n            })\r\n        }\r\n        // else if (!fileMedia.error && !fileMedia.loading && fileMedia.data != null){\r\n        //     setText({\r\n        //         loading: false,\r\n        //         data: fileMedia.data,\r\n        //         error: false\r\n        //     })\r\n        // }\r\n        else {\r\n            setText({\r\n                loading: false,\r\n                data: [],\r\n                error: true\r\n            })\r\n        }\r\n    },[/*fileMedia.data,*/restText.data])\r\n\r\n    return text\r\n}\r\n\r\nexport function useGetTextWeights(id){\r\n\r\n    const [text, setText] = useState({\r\n        loading: false,\r\n        data: null,\r\n        error: false\r\n    })\r\n\r\n    const restMedia = textModelRestAPI.useGetTextWeights(id)\r\n\r\n    useEffect( () => {\r\n        setText({\r\n            loading: true,\r\n            data: null,\r\n            error: false\r\n        })\r\n        if(!restMedia.error && !restMedia.loading && restMedia.data != null){\r\n            setText({\r\n                loading: false,\r\n                data: restMedia.data.length > 0 ? restMedia.data[0] : null,\r\n                error: false\r\n            })\r\n        }\r\n        else {\r\n            setText({\r\n                loading: false,\r\n                data: null,\r\n                error: true\r\n            })\r\n        }\r\n    },[restMedia.data])\r\n\r\n    return text\r\n}\r\n\r\n// export function createText(text){\r\n//     return create(text)\r\n// }\r\n// export function editMedia(text){\r\n//     return edit(text)\r\n// }","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\TextDisplayModel.js",["200","201","202","203","204","205"],"import React, {useState} from 'react'\r\nimport {Button, Container, Modal, Row, Col} from 'react-bootstrap';\r\nimport {TextVisualization} from \"./TextVisualization\";\r\nimport * as textRepository from \"../repositories/TextRepository\";\r\nimport \"./Modal.css\"\r\n\r\n\r\n//style={{position: \"absolute\" , left: \"10px\"}}\r\nexport function TextDisplayModal(props) {\r\n    const id = props.text\r\n\r\n    const text1 = textRepository.useGetTextWeights(id)\r\n    const [type, setType] = useState(\"Without Visualization\");\r\n\r\n    const [propertyName, setPropertyName] = useState(\"none\");\r\n    const [propertyValue, setPropertyValue] = useState(\"none\");\r\n    const [propertyType, setPropertyType] = useState(\"none\");\r\n\r\n    let onButtonClick = function(event){\r\n        textRepository.save(type,id,propertyName,propertyValue,propertyType)\r\n        props.onHide()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            aria-labelledby=\"example-custom-modal-styling-title\"\r\n            size=\"xl\"\r\n            dialogClassName=\"my-modal\"\r\n\r\n        >\r\n            <Modal.Header closeButton>\r\n\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Container>\r\n                    <Col >\r\n                        {text1 && text1.data ? <TextVisualization sentences={text1.data.sentences} type={type} /*type={type}*/ name={text1.data.name}/> : null}\r\n                    </Col>\r\n                </Container>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\LoginCard.js",["206"],"import React from 'react'\r\nimport { Button, Card, Col, Form, FormControl, InputGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nexport function LoginCard(props){\r\n\r\n    \r\n    return (\r\n        <Card style={{ width: '18rem' }}>\r\n        <Card.Body>\r\n            <Card.Title className=\"text-center\">Login</Card.Title>\r\n            <Form>\r\n                <Form.Row>\r\n                    <Col xs=\"auto\">\r\n                        <InputGroup className=\"mb-2\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>@</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl name=\"username\" onChange={props.handleInputChange} id=\"inlineFormInputGroup\" placeholder=\"Username\" />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <Col xs=\"auto\">\r\n                        <InputGroup className=\"mb-2\">\r\n                            <InputGroup.Prepend>\r\n                                <InputGroup.Text>@</InputGroup.Text>\r\n                            </InputGroup.Prepend>\r\n                            <FormControl name=\"password\" onChange={props.handleInputChange} type=\"password\" id=\"inlineFormInputGroup\" placeholder=\"Password\" />\r\n                        </InputGroup>\r\n                    </Col>\r\n                </Form.Row>\r\n            </Form>\r\n            <Button className=\"mb-2\" onClick={props.handleLogin} variant=\"primary\" block>Login</Button>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n    \r\n\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\TextVisualization.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\TextVisualizationFactory.js",["207","208","209","210","211","212"],"import React from 'react'\r\nimport { GradualHighlightVisualization } from './pages/GradualHighlightVisualization'\r\nimport { WithOutVisualization } from './pages/WithOutVisualization'\r\nimport {GradualFontVisualization} from \"./GradualFontVisualization\";\r\nimport {SummaryOnlyVisualization} from \"./SummaryOnlyVisualization\";\r\nimport {HighlightVisualization} from \"./HighlightVisualization\";\r\nimport {FontSizeVisualization} from \"./FontSizeVisualization\";\r\n\r\n\r\n\r\nexport function TextVisualizationFactory(props){\r\n\r\n   \r\n    const type = props.type\r\n\r\n    if(type == \"Without Visualization\"){\r\n        return <WithOutVisualization sentences={props.sentences}/>\r\n    }\r\n\r\n    else if (type == \"Gradual Highlight\"){\r\n        return <GradualHighlightVisualization sentences={props.sentences}/>\r\n    }\r\n    else if (type == \"Highlight\"){\r\n        return <HighlightVisualization sentences={props.sentences}/>\r\n    }\r\n    else if (type == \"Increased Font\"){\r\n        return <FontSizeVisualization sentences={props.sentences}/>\r\n    }\r\n    else if (type == \"Gradual Font\"){\r\n        return <GradualFontVisualization sentences={props.sentences}/>\r\n    }\r\n    else if (type == \"Summary Only\"){\r\n        return <SummaryOnlyVisualization sentences={props.sentences}/>\r\n    }\r\n    else{\r\n        return <WithOutVisualization sentences={props.sentences}/>\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\FontSizeVisualization.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\SummaryOnlyVisualization.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\HighlightVisualization.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\WithOutVisualization.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\GradualHighlightVisualization.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\GradualFontVisualization.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\CenteredModal.js",[],"C:\\Users\\meital\\WebstormProjects\\visual-summary\\client\\src\\components\\pages\\DeleteQuestion.js",["213","214","215","216","217"],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":2,"column":8,"nodeType":"224","messageId":"225","endLine":2,"endColumn":12},{"ruleId":"222","severity":1,"message":"226","line":8,"column":7,"nodeType":"224","messageId":"225","endLine":8,"endColumn":23},{"ruleId":"222","severity":1,"message":"227","line":9,"column":7,"nodeType":"224","messageId":"225","endLine":9,"endColumn":30},{"ruleId":"228","severity":1,"message":"229","line":21,"column":7,"nodeType":"230","endLine":21,"endColumn":9,"suggestions":"231"},{"ruleId":"222","severity":1,"message":"232","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":13},{"ruleId":"222","severity":1,"message":"233","line":4,"column":27,"nodeType":"224","messageId":"225","endLine":4,"endColumn":33},{"ruleId":"222","severity":1,"message":"234","line":7,"column":8,"nodeType":"224","messageId":"225","endLine":7,"endColumn":22},{"ruleId":"222","severity":1,"message":"235","line":14,"column":12,"nodeType":"224","messageId":"225","endLine":14,"endColumn":16},{"ruleId":"222","severity":1,"message":"236","line":14,"column":18,"nodeType":"224","messageId":"225","endLine":14,"endColumn":24},{"ruleId":"222","severity":1,"message":"237","line":12,"column":12,"nodeType":"224","messageId":"225","endLine":12,"endColumn":17},{"ruleId":"222","severity":1,"message":"238","line":1,"column":8,"nodeType":"224","messageId":"225","endLine":1,"endColumn":13},{"ruleId":"222","severity":1,"message":"239","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":25},{"ruleId":"222","severity":1,"message":"233","line":4,"column":27,"nodeType":"224","messageId":"225","endLine":4,"endColumn":33},{"ruleId":"222","severity":1,"message":"240","line":7,"column":10,"nodeType":"224","messageId":"225","endLine":7,"endColumn":17},{"ruleId":"222","severity":1,"message":"241","line":4,"column":8,"nodeType":"224","messageId":"225","endLine":4,"endColumn":13},{"ruleId":"222","severity":1,"message":"242","line":5,"column":9,"nodeType":"224","messageId":"225","endLine":5,"endColumn":19},{"ruleId":"222","severity":1,"message":"243","line":6,"column":9,"nodeType":"224","messageId":"225","endLine":6,"endColumn":25},{"ruleId":"222","severity":1,"message":"244","line":12,"column":12,"nodeType":"224","messageId":"225","endLine":12,"endColumn":20},{"ruleId":"222","severity":1,"message":"245","line":15,"column":12,"nodeType":"224","messageId":"225","endLine":15,"endColumn":21},{"ruleId":"222","severity":1,"message":"246","line":17,"column":11,"nodeType":"224","messageId":"225","endLine":17,"endColumn":17},{"ruleId":"222","severity":1,"message":"247","line":1,"column":17,"nodeType":"224","messageId":"225","endLine":1,"endColumn":26},{"ruleId":"222","severity":1,"message":"248","line":3,"column":9,"nodeType":"224","messageId":"225","endLine":3,"endColumn":13},{"ruleId":"222","severity":1,"message":"235","line":13,"column":12,"nodeType":"224","messageId":"225","endLine":13,"endColumn":16},{"ruleId":"222","severity":1,"message":"249","line":15,"column":11,"nodeType":"224","messageId":"225","endLine":15,"endColumn":19},{"ruleId":"222","severity":1,"message":"250","line":19,"column":11,"nodeType":"224","messageId":"225","endLine":19,"endColumn":19},{"ruleId":"222","severity":1,"message":"251","line":22,"column":11,"nodeType":"224","messageId":"225","endLine":22,"endColumn":15},{"ruleId":"222","severity":1,"message":"252","line":2,"column":10,"nodeType":"224","messageId":"225","endLine":2,"endColumn":16},{"ruleId":"222","severity":1,"message":"253","line":2,"column":31,"nodeType":"224","messageId":"225","endLine":2,"endColumn":42},{"ruleId":"222","severity":1,"message":"254","line":13,"column":12,"nodeType":"224","messageId":"225","endLine":13,"endColumn":17},{"ruleId":"222","severity":1,"message":"255","line":13,"column":19,"nodeType":"224","messageId":"225","endLine":13,"endColumn":27},{"ruleId":"222","severity":1,"message":"256","line":14,"column":12,"nodeType":"224","messageId":"225","endLine":14,"endColumn":20},{"ruleId":"222","severity":1,"message":"257","line":14,"column":22,"nodeType":"224","messageId":"225","endLine":14,"endColumn":33},{"ruleId":"222","severity":1,"message":"238","line":1,"column":8,"nodeType":"224","messageId":"225","endLine":1,"endColumn":13},{"ruleId":"222","severity":1,"message":"247","line":1,"column":16,"nodeType":"224","messageId":"225","endLine":1,"endColumn":25},{"ruleId":"222","severity":1,"message":"239","line":1,"column":27,"nodeType":"224","messageId":"225","endLine":1,"endColumn":35},{"ruleId":"222","severity":1,"message":"241","line":4,"column":8,"nodeType":"224","messageId":"225","endLine":4,"endColumn":13},{"ruleId":"222","severity":1,"message":"244","line":12,"column":12,"nodeType":"224","messageId":"225","endLine":12,"endColumn":20},{"ruleId":"222","severity":1,"message":"258","line":13,"column":11,"nodeType":"224","messageId":"225","endLine":13,"endColumn":18},{"ruleId":"222","severity":1,"message":"259","line":13,"column":20,"nodeType":"224","messageId":"225","endLine":13,"endColumn":30},{"ruleId":"222","severity":1,"message":"232","line":2,"column":17,"nodeType":"224","messageId":"225","endLine":2,"endColumn":20},{"ruleId":"222","severity":1,"message":"260","line":2,"column":39,"nodeType":"224","messageId":"225","endLine":2,"endColumn":42},{"ruleId":"222","severity":1,"message":"241","line":3,"column":8,"nodeType":"224","messageId":"225","endLine":3,"endColumn":13},{"ruleId":"222","severity":1,"message":"261","line":19,"column":11,"nodeType":"224","messageId":"225","endLine":19,"endColumn":18},{"ruleId":"222","severity":1,"message":"262","line":20,"column":11,"nodeType":"224","messageId":"225","endLine":20,"endColumn":18},{"ruleId":"222","severity":1,"message":"263","line":21,"column":11,"nodeType":"224","messageId":"225","endLine":21,"endColumn":18},{"ruleId":"222","severity":1,"message":"264","line":22,"column":11,"nodeType":"224","messageId":"225","endLine":22,"endColumn":18},{"ruleId":"222","severity":1,"message":"238","line":1,"column":8,"nodeType":"224","messageId":"225","endLine":1,"endColumn":13},{"ruleId":"228","severity":1,"message":"265","line":31,"column":7,"nodeType":"230","endLine":31,"endColumn":12,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":84,"column":36,"nodeType":"269","messageId":"270","endLine":84,"endColumn":37},{"ruleId":"267","severity":1,"message":"268","line":84,"column":42,"nodeType":"269","messageId":"270","endLine":84,"endColumn":43},{"ruleId":"222","severity":1,"message":"260","line":2,"column":35,"nodeType":"224","messageId":"225","endLine":2,"endColumn":38},{"ruleId":"222","severity":1,"message":"238","line":1,"column":8,"nodeType":"224","messageId":"225","endLine":1,"endColumn":13},{"ruleId":"228","severity":1,"message":"271","line":47,"column":7,"nodeType":"230","endLine":47,"endColumn":40,"suggestions":"272"},{"ruleId":"228","severity":1,"message":"271","line":90,"column":7,"nodeType":"230","endLine":90,"endColumn":41,"suggestions":"273"},{"ruleId":"228","severity":1,"message":"274","line":125,"column":7,"nodeType":"230","endLine":125,"endColumn":23,"suggestions":"275"},{"ruleId":"222","severity":1,"message":"260","line":2,"column":35,"nodeType":"224","messageId":"225","endLine":2,"endColumn":38},{"ruleId":"222","severity":1,"message":"276","line":13,"column":18,"nodeType":"224","messageId":"225","endLine":13,"endColumn":25},{"ruleId":"222","severity":1,"message":"277","line":15,"column":26,"nodeType":"224","messageId":"225","endLine":15,"endColumn":41},{"ruleId":"222","severity":1,"message":"278","line":16,"column":27,"nodeType":"224","messageId":"225","endLine":16,"endColumn":43},{"ruleId":"222","severity":1,"message":"279","line":17,"column":26,"nodeType":"224","messageId":"225","endLine":17,"endColumn":41},{"ruleId":"222","severity":1,"message":"280","line":19,"column":9,"nodeType":"224","messageId":"225","endLine":19,"endColumn":22},{"ruleId":"222","severity":1,"message":"248","line":3,"column":10,"nodeType":"224","messageId":"225","endLine":3,"endColumn":14},{"ruleId":"281","severity":1,"message":"282","line":16,"column":13,"nodeType":"269","messageId":"283","endLine":16,"endColumn":15},{"ruleId":"281","severity":1,"message":"282","line":20,"column":19,"nodeType":"269","messageId":"283","endLine":20,"endColumn":21},{"ruleId":"281","severity":1,"message":"282","line":23,"column":19,"nodeType":"269","messageId":"283","endLine":23,"endColumn":21},{"ruleId":"281","severity":1,"message":"282","line":26,"column":19,"nodeType":"269","messageId":"283","endLine":26,"endColumn":21},{"ruleId":"281","severity":1,"message":"282","line":29,"column":19,"nodeType":"269","messageId":"283","endLine":29,"endColumn":21},{"ruleId":"281","severity":1,"message":"282","line":32,"column":19,"nodeType":"269","messageId":"283","endLine":32,"endColumn":21},{"ruleId":"222","severity":1,"message":"241","line":4,"column":8,"nodeType":"224","messageId":"225","endLine":4,"endColumn":13},{"ruleId":"222","severity":1,"message":"244","line":12,"column":12,"nodeType":"224","messageId":"225","endLine":12,"endColumn":20},{"ruleId":"222","severity":1,"message":"258","line":13,"column":11,"nodeType":"224","messageId":"225","endLine":13,"endColumn":18},{"ruleId":"222","severity":1,"message":"259","line":13,"column":20,"nodeType":"224","messageId":"225","endLine":13,"endColumn":30},{"ruleId":"222","severity":1,"message":"284","line":17,"column":11,"nodeType":"224","messageId":"225","endLine":17,"endColumn":24},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'AuthenticatedApp' is assigned a value but never used.","'AuthenticatedManagerApp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'login' and 'logout'. Either include them or remove the dependency array.","ArrayExpression",["287"],"'Col' is defined but never used.","'Router' is defined but never used.","'TextManagement' is defined but never used.","'user' is assigned a value but never used.","'logout' is assigned a value but never used.","'login' is assigned a value but never used.","'React' is defined but never used.","'useState' is defined but never used.","'useAuth' is defined but never used.","'axios' is defined but never used.","'deleteText' is defined but never used.","'TextDisplayModal' is defined but never used.","'register' is assigned a value but never used.","'modalShow' is assigned a value but never used.","'reload' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'setModal' is assigned a value but never used.","'textById' is assigned a value but never used.","'size' is assigned a value but never used.","'Button' is defined but never used.","'NavDropdown' is defined but never used.","'click' is assigned a value but never used.","'setClick' is assigned a value but never used.","'dropdown' is assigned a value but never used.","'setDropdown' is assigned a value but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'Row' is defined but never used.","'answer1' is assigned a value but never used.","'answer2' is assigned a value but never used.","'answer3' is assigned a value but never used.","'answer4' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'headers'. Either include it or remove the dependency array.",["288"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has missing dependencies: 'restText.error' and 'restText.loading'. Either include them or remove the dependency array.",["289"],["290"],"React Hook useEffect has missing dependencies: 'restMedia.error' and 'restMedia.loading'. Either include them or remove the dependency array.",["291"],"'setType' is assigned a value but never used.","'setPropertyName' is assigned a value but never used.","'setPropertyValue' is assigned a value but never used.","'setPropertyType' is assigned a value but never used.","'onButtonClick' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'questionsById' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"296","fix":"298"},{"desc":"299","fix":"300"},"Update the dependencies array to be: [login, logout]",{"range":"301","text":"302"},"Update the dependencies array to be: [headers, url]",{"range":"303","text":"304"},"Update the dependencies array to be: [restText.data, restText.error, restText.loading]",{"range":"305","text":"306"},{"range":"307","text":"306"},"Update the dependencies array to be: [restMedia.data, restMedia.error, restMedia.loading]",{"range":"308","text":"309"},[569,571],"[login, logout]",[809,814],"[headers, url]",[1351,1384],"[restText.data, restText.error, restText.loading]",[2463,2497],[3314,3330],"[restMedia.data, restMedia.error, restMedia.loading]"]